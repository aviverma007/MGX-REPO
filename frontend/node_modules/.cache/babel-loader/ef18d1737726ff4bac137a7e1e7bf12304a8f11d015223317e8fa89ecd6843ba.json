{"ast":null,"code":"import _objectSpread from\"D:/SMARTDESK APPLICATION FILES/EMPLOYEE_DIR_BETA1/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import*as XLSX from'xlsx';class DataService{constructor(){this.employees=[];this.attendance=[];this.hierarchy=[];this.departments=[];this.locations=[];this.news=[];this.tasks=[];this.knowledge=[];this.help=[];this.policies=[];this.workflows=[];this.meetingRooms=[];this.alerts=[];// Add alerts array\nthis.isLoaded=false;}// Load Excel files and parse data\nasync loadAllData(){try{console.log('Loading data from Excel files...');// Load employee data\nawait this.loadEmployeeData();// Load attendance data\nawait this.loadAttendanceData();// Initialize other data structures\nthis.initializeOtherData();// Initialize demo alerts for testing\nthis.initializeDemoAlerts();this.isLoaded=true;console.log('All data loaded successfully');return{employees:this.employees.length,attendance:this.attendance.length,departments:this.departments.length,locations:this.locations.length};}catch(error){console.error('Error loading data:',error);throw error;}}// Load employee data from Excel\nasync loadEmployeeData(){try{const response=await fetch('/employee_directory.xlsx');const arrayBuffer=await response.arrayBuffer();const workbook=XLSX.read(arrayBuffer,{type:'array'});const sheetName=workbook.SheetNames[0];const worksheet=workbook.Sheets[sheetName];const jsonData=XLSX.utils.sheet_to_json(worksheet);this.employees=jsonData.map(row=>{// Convert mobile number safely\nconst mobile=row['MOBILE']?String(row['MOBILE']):'';// Convert extension safely\nconst extension=row['EXTENSION NUMBER']?String(row['EXTENSION NUMBER']):'0';// Handle reporting ID\nlet reportingId=null;if(row['REPORTING ID']&&String(row['REPORTING ID']).trim()!==''){reportingId=String(row['REPORTING ID']);}// Handle date of joining - Convert Excel serial number to date\nlet dateJoining='';if(row['DATE OF JOINING']){try{const rawDate=row['DATE OF JOINING'];// If it's a number (Excel serial date), convert it\nif(typeof rawDate==='number'){// Excel serial date: days since January 1, 1900\n// JavaScript Date: milliseconds since January 1, 1970\n// Excel epoch: January 1, 1900 (but Excel incorrectly treats 1900 as leap year)\nconst excelEpoch=new Date(1900,0,1);// January 1, 1900\nconst msPerDay=24*60*60*1000;// Subtract 2 days to account for Excel's leap year bug and 0-indexing\nconst jsDate=new Date(excelEpoch.getTime()+(rawDate-2)*msPerDay);dateJoining=jsDate.toISOString().split('T')[0];// Format: YYYY-MM-DD\n}// If it's already a string, try to parse it\nelse if(typeof rawDate==='string'){const parsedDate=new Date(rawDate);if(!isNaN(parsedDate.getTime())){dateJoining=parsedDate.toISOString().split('T')[0];}else{dateJoining=String(rawDate).split(' ')[0];}}// If it's a Date object\nelse if(rawDate instanceof Date){dateJoining=rawDate.toISOString().split('T')[0];}// Fallback\nelse{dateJoining=String(rawDate);}}catch(error){console.warn('Error parsing date for employee:',row['EMP NAME'],'Raw date:',row['DATE OF JOINING']);dateJoining=String(row['DATE OF JOINING']);}}return{id:String(row['EMP ID']),name:String(row['EMP NAME']||'').trim(),department:String(row['DEPARTMENT']||'').trim(),grade:String(row['GRADE']||'').trim(),reportingManager:row['REPORTING MANAGER']?String(row['REPORTING MANAGER']).trim():'*',reportingId:reportingId,location:String(row['LOCATION']||'').trim(),mobile:mobile,extension:extension,email:String(row['EMAIL ID']||'').trim(),dateOfJoining:dateJoining,profileImage:'/api/placeholder/150/150'};});// Extract unique departments and locations\nthis.departments=['All Departments',...new Set(this.employees.map(emp=>emp.department).filter(dept=>dept))];this.locations=['All Locations',...new Set(this.employees.map(emp=>emp.location).filter(loc=>loc))];console.log(\"Loaded \".concat(this.employees.length,\" employees\"));}catch(error){console.error('Error loading employee data:',error);throw error;}}// Load attendance data from Excel\nasync loadAttendanceData(){try{const response=await fetch('/attendance_data.xlsx');const arrayBuffer=await response.arrayBuffer();const workbook=XLSX.read(arrayBuffer,{type:'array'});const sheetName=workbook.SheetNames[0];const worksheet=workbook.Sheets[sheetName];const jsonData=XLSX.utils.sheet_to_json(worksheet);this.attendance=jsonData.map((row,index)=>{// Parse dates and times\nconst dateStr=String(row['date']);let dateFormatted='';if(dateStr.includes('T')){const dateObj=new Date(dateStr);dateFormatted=dateObj.toISOString().split('T')[0];}else{dateFormatted=dateStr.substring(0,10);}// Parse punch in/out times\nlet punchIn=null,punchOut=null;if(row['punch_in']&&String(row['punch_in'])!=='nan'){punchIn=new Date(String(row['punch_in'])).toISOString();}if(row['punch_out']&&String(row['punch_out'])!=='nan'){punchOut=new Date(String(row['punch_out'])).toISOString();}return{id:\"att_\".concat((index+1).toString().padStart(4,'0')),employee_id:String(row['employee_id']),employee_name:String(row['employee_name']),date:dateFormatted,punch_in:punchIn,punch_out:punchOut,punch_in_location:row['punch_in_location']?String(row['punch_in_location']):null,punch_out_location:row['punch_out_location']?String(row['punch_out_location']):null,status:String(row['status']).toLowerCase(),total_hours:row['total_hours']?parseFloat(row['total_hours']):0.0,remarks:row['remarks']&&String(row['remarks'])!=='nan'?String(row['remarks']):null,created_at:new Date().toISOString(),updated_at:new Date().toISOString()};});console.log(\"Loaded \".concat(this.attendance.length,\" attendance records\"));}catch(error){console.error('Error loading attendance data:',error);// If attendance file doesn't exist, create sample data\nthis.attendance=this.generateSampleAttendance();}}// Initialize other data structures with sample data\ninitializeOtherData(){// Initialize meeting rooms with persistence\nthis.meetingRooms=this.generateMeetingRooms();// Initialize sample data for other modules\nthis.news=[];this.tasks=[];this.knowledge=[];this.help=[];this.policies=this.generateSamplePolicies();this.workflows=[];// Update locations to include all meeting room locations\nconst meetingRoomLocations=[...new Set(this.meetingRooms.map(room=>room.location))];this.locations=[...new Set([...this.locations,...meetingRoomLocations])];}// Generate sample attendance data if Excel file is not available\ngenerateSampleAttendance(){const sampleEmployees=this.employees.slice(0,5);const attendance=[];const statuses=['present','late','half_day'];const locations=['IFC Office','Remote','Client Site'];// Generate last 7 days of data\nfor(let i=0;i<7;i++){const date=new Date();date.setDate(date.getDate()-i);if(date.getDay()!==0&&date.getDay()!==6){// Skip weekends\nsampleEmployees.forEach((emp,j)=>{const punchIn=new Date(date);punchIn.setHours(9,Math.floor(Math.random()*30));const punchOut=new Date(date);punchOut.setHours(17,30+Math.floor(Math.random()*30));attendance.push({id:\"att_\".concat((attendance.length+1).toString().padStart(4,'0')),employee_id:emp.id,employee_name:emp.name,date:date.toISOString().split('T')[0],punch_in:punchIn.toISOString(),punch_out:punchOut.toISOString(),punch_in_location:locations[Math.floor(Math.random()*locations.length)],punch_out_location:locations[Math.floor(Math.random()*locations.length)],status:statuses[Math.floor(Math.random()*statuses.length)],total_hours:Math.round((punchOut-punchIn)/(1000*60*60)*100)/100,remarks:null,created_at:new Date().toISOString(),updated_at:new Date().toISOString()});});}}return attendance;}// Generate meeting rooms data with persistence\ngenerateMeetingRooms(){// Try to load from localStorage first\nconst savedRooms=this.loadMeetingRoomsFromStorage();if(savedRooms&&savedRooms.length>0){console.log(\"Loaded \".concat(savedRooms.length,\" meeting rooms from storage\"));return savedRooms;}// Create initial room structure\nconst rooms=[// IFC 11th Floor - 1 room\n{id:\"ifc-11-001\",name:\"IFC Conference Room 11A\",location:\"IFC\",floor:\"11th Floor\",capacity:10,amenities:\"Projector, Whiteboard, Video Conference\",status:\"vacant\",bookings:[],current_booking:null},// IFC 12th Floor - 1 room\n{id:\"ifc-12-001\",name:\"IFC Conference Room 12B\",location:\"IFC\",floor:\"12th Floor\",capacity:6,amenities:\"Projector, Whiteboard\",status:\"vacant\",bookings:[],current_booking:null},// IFC 14th Floor - Multiple rooms (9 rooms as per test results)\n{id:\"ifc-14-001\",name:\"OVAL MEETING ROOM\",location:\"IFC\",floor:\"14th Floor\",capacity:10,amenities:\"Projector, Video Conference, Whiteboard\",status:\"vacant\",bookings:[],current_booking:null},{id:\"ifc-14-002\",name:\"PETRONAS MEETING ROOM\",location:\"IFC\",floor:\"14th Floor\",capacity:5,amenities:\"Projector, Whiteboard\",status:\"vacant\",bookings:[],current_booking:null},{id:\"ifc-14-003\",name:\"GLOBAL CENTER MEETING ROOM\",location:\"IFC\",floor:\"14th Floor\",capacity:5,amenities:\"Projector, Whiteboard\",status:\"vacant\",bookings:[],current_booking:null},{id:\"ifc-14-004\",name:\"LOUVRE MEETING ROOM\",location:\"IFC\",floor:\"14th Floor\",capacity:5,amenities:\"Projector, Whiteboard\",status:\"vacant\",bookings:[],current_booking:null},{id:\"ifc-14-005\",name:\"GOLDEN GATE MEETING ROOM\",location:\"IFC\",floor:\"14th Floor\",capacity:10,amenities:\"Projector, Video Conference, Whiteboard\",status:\"vacant\",bookings:[],current_booking:null},{id:\"ifc-14-006\",name:\"EMPIRE STATE MEETING ROOM\",location:\"IFC\",floor:\"14th Floor\",capacity:5,amenities:\"Projector, Whiteboard\",status:\"vacant\",bookings:[],current_booking:null},{id:\"ifc-14-007\",name:\"MARINA BAY MEETING ROOM\",location:\"IFC\",floor:\"14th Floor\",capacity:5,amenities:\"Projector, Whiteboard\",status:\"vacant\",bookings:[],current_booking:null},{id:\"ifc-14-008\",name:\"BURJ MEETING ROOM\",location:\"IFC\",floor:\"14th Floor\",capacity:5,amenities:\"Projector, Whiteboard\",status:\"vacant\",bookings:[],current_booking:null},{id:\"ifc-14-009\",name:\"BOARD ROOM\",location:\"IFC\",floor:\"14th Floor\",capacity:20,amenities:\"Projector, Video Conference, Whiteboard, Audio System\",status:\"vacant\",bookings:[],current_booking:null},// Other locations - 1 room each on floor 1\n{id:\"central-1-001\",name:\"Central Office Conference Room\",location:\"Central Office 75\",floor:\"1st Floor\",capacity:8,amenities:\"Projector, Whiteboard\",status:\"vacant\",bookings:[],current_booking:null},{id:\"office75-1-001\",name:\"Office 75 Meeting Room\",location:\"Office 75\",floor:\"1st Floor\",capacity:6,amenities:\"Projector, Whiteboard\",status:\"vacant\",bookings:[],current_booking:null},{id:\"noida-1-001\",name:\"Noida Conference Room\",location:\"Noida\",floor:\"1st Floor\",capacity:12,amenities:\"Projector, Video Conference, Whiteboard\",status:\"vacant\",bookings:[],current_booking:null},{id:\"project-1-001\",name:\"Project Office Meeting Room\",location:\"Project Office\",floor:\"1st Floor\",capacity:8,amenities:\"Projector, Whiteboard\",status:\"vacant\",bookings:[],current_booking:null}];// Save initial structure to storage\nthis.saveMeetingRoomsToStorage(rooms);console.log(\"Generated and saved \".concat(rooms.length,\" meeting rooms\"));return rooms;}// Load meeting rooms from localStorage\nloadMeetingRoomsFromStorage(){try{const saved=localStorage.getItem('meetingRooms_data');if(saved){const parsed=JSON.parse(saved);// Clean up expired bookings on load\nthis.cleanupExpiredBookings(parsed);return parsed;}}catch(error){console.error('Error loading meeting rooms from storage:',error);}return null;}// Save meeting rooms to localStorage\nsaveMeetingRoomsToStorage(){let rooms=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;try{const roomsToSave=rooms||this.meetingRooms;localStorage.setItem('meetingRooms_data',JSON.stringify(roomsToSave));localStorage.setItem('meetingRooms_lastSaved',new Date().toISOString());}catch(error){console.error('Error saving meeting rooms to storage:',error);}}// Clean up expired bookings\ncleanupExpiredBookings(rooms){const now=new Date();rooms.forEach(room=>{if(room.current_booking){const endTime=new Date(room.current_booking.end_time);if(endTime<now){room.status='vacant';room.current_booking=null;room.bookings=[];}}});}// Generate sample policies\ngenerateSamplePolicies(){return[{id:\"policy_001\",title:\"Employee Code of Conduct\",category:\"hr\",content:\"Guidelines for professional behavior and conduct\",effective_date:\"2024-01-01\",version:\"1.0\"},{id:\"policy_002\",title:\"IT Security Policy\",category:\"it\",content:\"Information technology security guidelines and procedures\",effective_date:\"2024-01-01\",version:\"1.0\"}];}// Employee API methods\nasync getEmployees(){let searchParams=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};if(!this.isLoaded)await this.loadAllData();let filtered=[...this.employees];if(searchParams.search){const search=searchParams.search.toLowerCase();filtered=filtered.filter(emp=>emp.name.toLowerCase().startsWith(search)||emp.id.toLowerCase().startsWith(search)||emp.department.toLowerCase().startsWith(search)||emp.location.toLowerCase().startsWith(search)||emp.grade.toLowerCase().startsWith(search)||emp.mobile.startsWith(search));}if(searchParams.department&&searchParams.department!=='All Departments'){filtered=filtered.filter(emp=>emp.department===searchParams.department);}if(searchParams.location&&searchParams.location!=='All Locations'){filtered=filtered.filter(emp=>emp.location===searchParams.location);}return filtered;}async updateEmployeeImage(employeeId,imageData){if(!this.isLoaded)await this.loadAllData();const employee=this.employees.find(emp=>emp.id===employeeId);if(employee){employee.profileImage=imageData.profileImage||imageData;return employee;}throw new Error('Employee not found');}// Utility methods\nasync getDepartments(){if(!this.isLoaded)await this.loadAllData();return this.departments;}async getLocations(){if(!this.isLoaded)await this.loadAllData();return this.locations;}async getStats(){if(!this.isLoaded)await this.loadAllData();return{database:{employees:this.employees.length,departments:this.departments.length-1,// Exclude \"All Departments\"\nlocations:this.locations.length-1,// Exclude \"All Locations\"\nattendance_records:this.attendance.length,hierarchy_relations:this.hierarchy.length},excel:{total_employees:this.employees.length,departments_count:this.departments.length-1,locations_count:this.locations.length-1}};}// Hierarchy methods\nasync getHierarchy(){return this.hierarchy;}async createHierarchy(relationshipData){const newRelation=_objectSpread(_objectSpread({id:\"hier_\".concat(Date.now())},relationshipData),{},{created_at:new Date().toISOString()});this.hierarchy.push(newRelation);return newRelation;}async deleteHierarchy(relationId){const index=this.hierarchy.findIndex(h=>h.id===relationId);if(index>-1){this.hierarchy.splice(index,1);return{message:'Hierarchy relationship deleted'};}throw new Error('Hierarchy relationship not found');}async clearAllHierarchy(){this.hierarchy=[];return{message:'All hierarchy relationships cleared'};}// News methods\nasync getNews(){return this.news;}async createNews(newsData){const newNews=_objectSpread(_objectSpread({id:\"news_\".concat(Date.now())},newsData),{},{created_at:new Date().toISOString(),updated_at:new Date().toISOString()});this.news.unshift(newNews);return newNews;}async updateNews(id,newsData){const index=this.news.findIndex(n=>n.id===id);if(index>-1){this.news[index]=_objectSpread(_objectSpread(_objectSpread({},this.news[index]),newsData),{},{updated_at:new Date().toISOString()});return this.news[index];}throw new Error('News not found');}async deleteNews(id){const index=this.news.findIndex(n=>n.id===id);if(index>-1){this.news.splice(index,1);return{message:'News deleted'};}throw new Error('News not found');}// Task methods\nasync getTasks(){return this.tasks;}async createTask(taskData){const newTask=_objectSpread(_objectSpread({id:\"task_\".concat(Date.now())},taskData),{},{created_at:new Date().toISOString(),updated_at:new Date().toISOString()});this.tasks.unshift(newTask);return newTask;}async updateTask(id,taskData){const index=this.tasks.findIndex(t=>t.id===id);if(index>-1){this.tasks[index]=_objectSpread(_objectSpread(_objectSpread({},this.tasks[index]),taskData),{},{updated_at:new Date().toISOString()});return this.tasks[index];}throw new Error('Task not found');}async deleteTask(id){const index=this.tasks.findIndex(t=>t.id===id);if(index>-1){this.tasks.splice(index,1);return{message:'Task deleted'};}throw new Error('Task not found');}// Knowledge methods\nasync getKnowledge(){return this.knowledge;}async createKnowledge(knowledgeData){const newKnowledge=_objectSpread(_objectSpread({id:\"knowledge_\".concat(Date.now())},knowledgeData),{},{created_at:new Date().toISOString(),updated_at:new Date().toISOString()});this.knowledge.unshift(newKnowledge);return newKnowledge;}async updateKnowledge(id,knowledgeData){const index=this.knowledge.findIndex(k=>k.id===id);if(index>-1){this.knowledge[index]=_objectSpread(_objectSpread(_objectSpread({},this.knowledge[index]),knowledgeData),{},{updated_at:new Date().toISOString()});return this.knowledge[index];}throw new Error('Knowledge not found');}async deleteKnowledge(id){const index=this.knowledge.findIndex(k=>k.id===id);if(index>-1){this.knowledge.splice(index,1);return{message:'Knowledge deleted'};}throw new Error('Knowledge not found');}// Help methods\nasync getHelp(){return this.help;}async createHelp(helpData){const newHelp=_objectSpread(_objectSpread({id:\"help_\".concat(Date.now())},helpData),{},{replies:[],created_at:new Date().toISOString(),updated_at:new Date().toISOString()});this.help.unshift(newHelp);return newHelp;}async updateHelp(id,helpData){const index=this.help.findIndex(h=>h.id===id);if(index>-1){this.help[index]=_objectSpread(_objectSpread(_objectSpread({},this.help[index]),helpData),{},{updated_at:new Date().toISOString()});return this.help[index];}throw new Error('Help request not found');}async addHelpReply(id,replyData){const index=this.help.findIndex(h=>h.id===id);if(index>-1){const reply=_objectSpread(_objectSpread({id:\"reply_\".concat(Date.now())},replyData),{},{created_at:new Date().toISOString()});this.help[index].replies.push(reply);this.help[index].updated_at=new Date().toISOString();return reply;}throw new Error('Help request not found');}async deleteHelp(id){const index=this.help.findIndex(h=>h.id===id);if(index>-1){this.help.splice(index,1);return{message:'Help request deleted'};}throw new Error('Help request not found');}// Meeting Rooms methods\nasync getMeetingRooms(){let filters=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};// Clean up expired bookings first\nthis.cleanupExpiredBookings(this.meetingRooms);let filtered=[...this.meetingRooms];if(filters.location){filtered=filtered.filter(room=>room.location===filters.location);}if(filters.floor){filtered=filtered.filter(room=>room.floor===filters.floor);}if(filters.status){filtered=filtered.filter(room=>room.status===filters.status);}// Save any changes made by cleanup\nthis.saveMeetingRoomsToStorage();return filtered;}async bookMeetingRoom(roomId,bookingData){const room=this.meetingRooms.find(r=>r.id===roomId);if(!room){throw new Error('Meeting room not found');}// Check if room is already booked\nif(room.status==='occupied'){throw new Error('Room is already booked. Multiple bookings are not allowed.');}// Validate booking times\nconst startTime=new Date(bookingData.start_time);const endTime=new Date(bookingData.end_time);const now=new Date();if(startTime<now){throw new Error('Cannot book a room for past time');}if(endTime<=startTime){throw new Error('End time must be after start time');}const booking=_objectSpread(_objectSpread({id:\"booking_\".concat(Date.now())},bookingData),{},{room_id:roomId,room_name:room.name,created_at:new Date().toISOString()});room.bookings=[booking];room.current_booking=booking;room.status='occupied';// Save to localStorage\nthis.saveMeetingRoomsToStorage();console.log(\"Room \".concat(room.name,\" booked successfully for \").concat(booking.employee_name));return booking;}async cancelMeetingRoomBooking(roomId){let bookingId=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;const room=this.meetingRooms.find(r=>r.id===roomId);if(!room){throw new Error('Meeting room not found');}if(room.status==='vacant'){throw new Error('No booking found to cancel');}const roomName=room.name;const employeeName=room.current_booking?room.current_booking.employee_name:'Unknown';room.bookings=[];room.current_booking=null;room.status='vacant';// Save to localStorage\nthis.saveMeetingRoomsToStorage();console.log(\"Booking cancelled for \".concat(roomName,\" (previously booked by \").concat(employeeName,\")\"));return{message:'Booking cancelled successfully',room_name:roomName};}async clearAllMeetingRoomBookings(){let cancelledCount=0;this.meetingRooms.forEach(room=>{if(room.status==='occupied'){cancelledCount++;}room.bookings=[];room.current_booking=null;room.status='vacant';});// Save to localStorage\nthis.saveMeetingRoomsToStorage();console.log(\"Cleared all bookings: \".concat(cancelledCount,\" rooms were occupied, now all \").concat(this.meetingRooms.length,\" rooms are vacant\"));return{message:'All bookings cleared successfully',rooms_updated:this.meetingRooms.length,previously_occupied:cancelledCount};}// Attendance methods\nasync getAttendance(){let searchParams=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let filtered=[...this.attendance];if(searchParams.search){const search=searchParams.search.toLowerCase();filtered=filtered.filter(att=>att.employee_name.toLowerCase().startsWith(search)||att.employee_id.toLowerCase().startsWith(search));}return filtered;}async createAttendance(attendanceData){const newAttendance=_objectSpread(_objectSpread({id:\"att_\".concat(Date.now())},attendanceData),{},{created_at:new Date().toISOString(),updated_at:new Date().toISOString()});this.attendance.unshift(newAttendance);return newAttendance;}// Policies methods\nasync getPolicies(){return this.policies;}async createPolicy(policyData){const newPolicy=_objectSpread(_objectSpread({id:\"policy_\".concat(Date.now())},policyData),{},{created_at:new Date().toISOString(),updated_at:new Date().toISOString()});this.policies.unshift(newPolicy);return newPolicy;}// Workflows methods\nasync getWorkflows(){return this.workflows;}async createWorkflow(workflowData){const newWorkflow=_objectSpread(_objectSpread({id:\"workflow_\".concat(Date.now())},workflowData),{},{created_at:new Date().toISOString(),updated_at:new Date().toISOString()});this.workflows.unshift(newWorkflow);return newWorkflow;}// ===== ALERTS MANAGEMENT =====\n// Get all alerts\ngetAlerts(){return this.alerts;}// Get active alerts (for user display)\ngetActiveAlerts(){const now=new Date();return this.alerts.filter(alert=>alert.isActive&&(!alert.expiryDate||new Date(alert.expiryDate)>now));}// Create a new alert (Admin only)\ncreateAlert(alertData){const newAlert={id:\"alert_\".concat(Date.now()),title:alertData.title||'Alert',message:alertData.message||'',type:alertData.type||'info',// info, warning, success, error\npriority:alertData.priority||'normal',// high, normal, low\nisActive:alertData.isActive!==undefined?alertData.isActive:true,expiryDate:alertData.expiryDate||null,created_at:new Date().toISOString(),updated_at:new Date().toISOString(),createdBy:alertData.createdBy||'admin'};this.alerts.unshift(newAlert);return newAlert;}// Update alert (Admin only)\nupdateAlert(alertId,alertData){const alertIndex=this.alerts.findIndex(alert=>alert.id===alertId);if(alertIndex===-1){throw new Error('Alert not found');}this.alerts[alertIndex]=_objectSpread(_objectSpread(_objectSpread({},this.alerts[alertIndex]),alertData),{},{updated_at:new Date().toISOString()});return this.alerts[alertIndex];}// Delete alert (Admin only)\ndeleteAlert(alertId){const alertIndex=this.alerts.findIndex(alert=>alert.id===alertId);if(alertIndex===-1){throw new Error('Alert not found');}const deletedAlert=this.alerts.splice(alertIndex,1)[0];return deletedAlert;}// Toggle alert status (Admin only)\ntoggleAlertStatus(alertId){const alert=this.alerts.find(alert=>alert.id===alertId);if(!alert){throw new Error('Alert not found');}alert.isActive=!alert.isActive;alert.updated_at=new Date().toISOString();return alert;}// Initialize demo alerts for testing\ninitializeDemoAlerts(){// Only add demo alerts if alerts array is empty\nif(this.alerts.length===0){const demoAlerts=[{id:'alert_demo_1',title:'Welcome to SmartWorld!',message:'Welcome to the SmartWorld Employee Management System. We are excited to have you on board!',type:'success',priority:'high',isActive:true,expiryDate:null,created_at:new Date().toISOString(),updated_at:new Date().toISOString(),createdBy:'system'},{id:'alert_demo_2',title:'System Updates',message:'New features have been added to the system. Check out the enhanced employee directory and meeting room booking system.',type:'info',priority:'normal',isActive:true,expiryDate:null,created_at:new Date().toISOString(),updated_at:new Date().toISOString(),createdBy:'system'}];this.alerts=demoAlerts;console.log('Demo alerts initialized:',this.alerts.length);}}}// Create singleton instance\nconst dataService=new DataService();export default dataService;","map":{"version":3,"names":["XLSX","DataService","constructor","employees","attendance","hierarchy","departments","locations","news","tasks","knowledge","help","policies","workflows","meetingRooms","alerts","isLoaded","loadAllData","console","log","loadEmployeeData","loadAttendanceData","initializeOtherData","initializeDemoAlerts","length","error","response","fetch","arrayBuffer","workbook","read","type","sheetName","SheetNames","worksheet","Sheets","jsonData","utils","sheet_to_json","map","row","mobile","String","extension","reportingId","trim","dateJoining","rawDate","excelEpoch","Date","msPerDay","jsDate","getTime","toISOString","split","parsedDate","isNaN","warn","id","name","department","grade","reportingManager","location","email","dateOfJoining","profileImage","Set","emp","filter","dept","loc","concat","index","dateStr","dateFormatted","includes","dateObj","substring","punchIn","punchOut","toString","padStart","employee_id","employee_name","date","punch_in","punch_out","punch_in_location","punch_out_location","status","toLowerCase","total_hours","parseFloat","remarks","created_at","updated_at","generateSampleAttendance","generateMeetingRooms","generateSamplePolicies","meetingRoomLocations","room","sampleEmployees","slice","statuses","i","setDate","getDate","getDay","forEach","j","setHours","Math","floor","random","push","round","savedRooms","loadMeetingRoomsFromStorage","rooms","capacity","amenities","bookings","current_booking","saveMeetingRoomsToStorage","saved","localStorage","getItem","parsed","JSON","parse","cleanupExpiredBookings","arguments","undefined","roomsToSave","setItem","stringify","now","endTime","end_time","title","category","content","effective_date","version","getEmployees","searchParams","filtered","search","startsWith","updateEmployeeImage","employeeId","imageData","employee","find","Error","getDepartments","getLocations","getStats","database","attendance_records","hierarchy_relations","excel","total_employees","departments_count","locations_count","getHierarchy","createHierarchy","relationshipData","newRelation","_objectSpread","deleteHierarchy","relationId","findIndex","h","splice","message","clearAllHierarchy","getNews","createNews","newsData","newNews","unshift","updateNews","n","deleteNews","getTasks","createTask","taskData","newTask","updateTask","t","deleteTask","getKnowledge","createKnowledge","knowledgeData","newKnowledge","updateKnowledge","k","deleteKnowledge","getHelp","createHelp","helpData","newHelp","replies","updateHelp","addHelpReply","replyData","reply","deleteHelp","getMeetingRooms","filters","bookMeetingRoom","roomId","bookingData","r","startTime","start_time","booking","room_id","room_name","cancelMeetingRoomBooking","bookingId","roomName","employeeName","clearAllMeetingRoomBookings","cancelledCount","rooms_updated","previously_occupied","getAttendance","att","createAttendance","attendanceData","newAttendance","getPolicies","createPolicy","policyData","newPolicy","getWorkflows","createWorkflow","workflowData","newWorkflow","getAlerts","getActiveAlerts","alert","isActive","expiryDate","createAlert","alertData","newAlert","priority","createdBy","updateAlert","alertId","alertIndex","deleteAlert","deletedAlert","toggleAlertStatus","demoAlerts","dataService"],"sources":["D:/SMARTDESK APPLICATION FILES/EMPLOYEE_DIR_BETA1/frontend/src/services/dataService.js"],"sourcesContent":["import * as XLSX from 'xlsx';\r\n\r\nclass DataService {\r\n  constructor() {\r\n    this.employees = [];\r\n    this.attendance = [];\r\n    this.hierarchy = [];\r\n    this.departments = [];\r\n    this.locations = [];\r\n    this.news = [];\r\n    this.tasks = [];\r\n    this.knowledge = [];\r\n    this.help = [];\r\n    this.policies = [];\r\n    this.workflows = [];\r\n    this.meetingRooms = [];\r\n    this.alerts = []; // Add alerts array\r\n    this.isLoaded = false;\r\n  }\r\n\r\n  // Load Excel files and parse data\r\n  async loadAllData() {\r\n    try {\r\n      console.log('Loading data from Excel files...');\r\n      \r\n      // Load employee data\r\n      await this.loadEmployeeData();\r\n      \r\n      // Load attendance data\r\n      await this.loadAttendanceData();\r\n      \r\n      // Initialize other data structures\r\n      this.initializeOtherData();\r\n      \r\n      // Initialize demo alerts for testing\r\n      this.initializeDemoAlerts();\r\n      \r\n      this.isLoaded = true;\r\n      console.log('All data loaded successfully');\r\n      \r\n      return {\r\n        employees: this.employees.length,\r\n        attendance: this.attendance.length,\r\n        departments: this.departments.length,\r\n        locations: this.locations.length\r\n      };\r\n    } catch (error) {\r\n      console.error('Error loading data:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Load employee data from Excel\r\n  async loadEmployeeData() {\r\n    try {\r\n      const response = await fetch('/employee_directory.xlsx');\r\n      const arrayBuffer = await response.arrayBuffer();\r\n      const workbook = XLSX.read(arrayBuffer, { type: 'array' });\r\n      const sheetName = workbook.SheetNames[0];\r\n      const worksheet = workbook.Sheets[sheetName];\r\n      const jsonData = XLSX.utils.sheet_to_json(worksheet);\r\n\r\n      this.employees = jsonData.map(row => {\r\n        // Convert mobile number safely\r\n        const mobile = row['MOBILE'] ? String(row['MOBILE']) : '';\r\n        \r\n        // Convert extension safely\r\n        const extension = row['EXTENSION NUMBER'] ? String(row['EXTENSION NUMBER']) : '0';\r\n        \r\n        // Handle reporting ID\r\n        let reportingId = null;\r\n        if (row['REPORTING ID'] && String(row['REPORTING ID']).trim() !== '') {\r\n          reportingId = String(row['REPORTING ID']);\r\n        }\r\n        \r\n        // Handle date of joining - Convert Excel serial number to date\r\n        let dateJoining = '';\r\n        if (row['DATE OF JOINING']) {\r\n          try {\r\n            const rawDate = row['DATE OF JOINING'];\r\n            \r\n            // If it's a number (Excel serial date), convert it\r\n            if (typeof rawDate === 'number') {\r\n              // Excel serial date: days since January 1, 1900\r\n              // JavaScript Date: milliseconds since January 1, 1970\r\n              // Excel epoch: January 1, 1900 (but Excel incorrectly treats 1900 as leap year)\r\n              const excelEpoch = new Date(1900, 0, 1); // January 1, 1900\r\n              const msPerDay = 24 * 60 * 60 * 1000;\r\n              // Subtract 2 days to account for Excel's leap year bug and 0-indexing\r\n              const jsDate = new Date(excelEpoch.getTime() + (rawDate - 2) * msPerDay);\r\n              dateJoining = jsDate.toISOString().split('T')[0]; // Format: YYYY-MM-DD\r\n            } \r\n            // If it's already a string, try to parse it\r\n            else if (typeof rawDate === 'string') {\r\n              const parsedDate = new Date(rawDate);\r\n              if (!isNaN(parsedDate.getTime())) {\r\n                dateJoining = parsedDate.toISOString().split('T')[0];\r\n              } else {\r\n                dateJoining = String(rawDate).split(' ')[0];\r\n              }\r\n            }\r\n            // If it's a Date object\r\n            else if (rawDate instanceof Date) {\r\n              dateJoining = rawDate.toISOString().split('T')[0];\r\n            }\r\n            // Fallback\r\n            else {\r\n              dateJoining = String(rawDate);\r\n            }\r\n          } catch (error) {\r\n            console.warn('Error parsing date for employee:', row['EMP NAME'], 'Raw date:', row['DATE OF JOINING']);\r\n            dateJoining = String(row['DATE OF JOINING']);\r\n          }\r\n        }\r\n\r\n        return {\r\n          id: String(row['EMP ID']),\r\n          name: String(row['EMP NAME'] || '').trim(),\r\n          department: String(row['DEPARTMENT'] || '').trim(),\r\n          grade: String(row['GRADE'] || '').trim(),\r\n          reportingManager: row['REPORTING MANAGER'] ? String(row['REPORTING MANAGER']).trim() : '*',\r\n          reportingId: reportingId,\r\n          location: String(row['LOCATION'] || '').trim(),\r\n          mobile: mobile,\r\n          extension: extension,\r\n          email: String(row['EMAIL ID'] || '').trim(),\r\n          dateOfJoining: dateJoining,\r\n          profileImage: '/api/placeholder/150/150'\r\n        };\r\n      });\r\n\r\n      // Extract unique departments and locations\r\n      this.departments = ['All Departments', ...new Set(this.employees.map(emp => emp.department).filter(dept => dept))];\r\n      this.locations = ['All Locations', ...new Set(this.employees.map(emp => emp.location).filter(loc => loc))];\r\n\r\n      console.log(`Loaded ${this.employees.length} employees`);\r\n    } catch (error) {\r\n      console.error('Error loading employee data:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Load attendance data from Excel\r\n  async loadAttendanceData() {\r\n    try {\r\n      const response = await fetch('/attendance_data.xlsx');\r\n      const arrayBuffer = await response.arrayBuffer();\r\n      const workbook = XLSX.read(arrayBuffer, { type: 'array' });\r\n      const sheetName = workbook.SheetNames[0];\r\n      const worksheet = workbook.Sheets[sheetName];\r\n      const jsonData = XLSX.utils.sheet_to_json(worksheet);\r\n\r\n      this.attendance = jsonData.map((row, index) => {\r\n        // Parse dates and times\r\n        const dateStr = String(row['date']);\r\n        let dateFormatted = '';\r\n        if (dateStr.includes('T')) {\r\n          const dateObj = new Date(dateStr);\r\n          dateFormatted = dateObj.toISOString().split('T')[0];\r\n        } else {\r\n          dateFormatted = dateStr.substring(0, 10);\r\n        }\r\n\r\n        // Parse punch in/out times\r\n        let punchIn = null, punchOut = null;\r\n        if (row['punch_in'] && String(row['punch_in']) !== 'nan') {\r\n          punchIn = new Date(String(row['punch_in'])).toISOString();\r\n        }\r\n        if (row['punch_out'] && String(row['punch_out']) !== 'nan') {\r\n          punchOut = new Date(String(row['punch_out'])).toISOString();\r\n        }\r\n\r\n        return {\r\n          id: `att_${(index + 1).toString().padStart(4, '0')}`,\r\n          employee_id: String(row['employee_id']),\r\n          employee_name: String(row['employee_name']),\r\n          date: dateFormatted,\r\n          punch_in: punchIn,\r\n          punch_out: punchOut,\r\n          punch_in_location: row['punch_in_location'] ? String(row['punch_in_location']) : null,\r\n          punch_out_location: row['punch_out_location'] ? String(row['punch_out_location']) : null,\r\n          status: String(row['status']).toLowerCase(),\r\n          total_hours: row['total_hours'] ? parseFloat(row['total_hours']) : 0.0,\r\n          remarks: row['remarks'] && String(row['remarks']) !== 'nan' ? String(row['remarks']) : null,\r\n          created_at: new Date().toISOString(),\r\n          updated_at: new Date().toISOString()\r\n        };\r\n      });\r\n\r\n      console.log(`Loaded ${this.attendance.length} attendance records`);\r\n    } catch (error) {\r\n      console.error('Error loading attendance data:', error);\r\n      // If attendance file doesn't exist, create sample data\r\n      this.attendance = this.generateSampleAttendance();\r\n    }\r\n  }\r\n\r\n  // Initialize other data structures with sample data\r\n  initializeOtherData() {\r\n    // Initialize meeting rooms with persistence\r\n    this.meetingRooms = this.generateMeetingRooms();\r\n    \r\n    // Initialize sample data for other modules\r\n    this.news = [];\r\n    this.tasks = [];\r\n    this.knowledge = [];\r\n    this.help = [];\r\n    this.policies = this.generateSamplePolicies();\r\n    this.workflows = [];\r\n    \r\n    // Update locations to include all meeting room locations\r\n    const meetingRoomLocations = [...new Set(this.meetingRooms.map(room => room.location))];\r\n    this.locations = [...new Set([...this.locations, ...meetingRoomLocations])];\r\n  }\r\n\r\n  // Generate sample attendance data if Excel file is not available\r\n  generateSampleAttendance() {\r\n    const sampleEmployees = this.employees.slice(0, 5);\r\n    const attendance = [];\r\n    const statuses = ['present', 'late', 'half_day'];\r\n    const locations = ['IFC Office', 'Remote', 'Client Site'];\r\n\r\n    // Generate last 7 days of data\r\n    for (let i = 0; i < 7; i++) {\r\n      const date = new Date();\r\n      date.setDate(date.getDate() - i);\r\n      \r\n      if (date.getDay() !== 0 && date.getDay() !== 6) { // Skip weekends\r\n        sampleEmployees.forEach((emp, j) => {\r\n          const punchIn = new Date(date);\r\n          punchIn.setHours(9, Math.floor(Math.random() * 30));\r\n          \r\n          const punchOut = new Date(date);\r\n          punchOut.setHours(17, 30 + Math.floor(Math.random() * 30));\r\n\r\n          attendance.push({\r\n            id: `att_${(attendance.length + 1).toString().padStart(4, '0')}`,\r\n            employee_id: emp.id,\r\n            employee_name: emp.name,\r\n            date: date.toISOString().split('T')[0],\r\n            punch_in: punchIn.toISOString(),\r\n            punch_out: punchOut.toISOString(),\r\n            punch_in_location: locations[Math.floor(Math.random() * locations.length)],\r\n            punch_out_location: locations[Math.floor(Math.random() * locations.length)],\r\n            status: statuses[Math.floor(Math.random() * statuses.length)],\r\n            total_hours: Math.round((punchOut - punchIn) / (1000 * 60 * 60) * 100) / 100,\r\n            remarks: null,\r\n            created_at: new Date().toISOString(),\r\n            updated_at: new Date().toISOString()\r\n          });\r\n        });\r\n      }\r\n    }\r\n\r\n    return attendance;\r\n  }\r\n\r\n  // Generate meeting rooms data with persistence\r\n  generateMeetingRooms() {\r\n    // Try to load from localStorage first\r\n    const savedRooms = this.loadMeetingRoomsFromStorage();\r\n    if (savedRooms && savedRooms.length > 0) {\r\n      console.log(`Loaded ${savedRooms.length} meeting rooms from storage`);\r\n      return savedRooms;\r\n    }\r\n    \r\n    // Create initial room structure\r\n    const rooms = [\r\n      // IFC 11th Floor - 1 room\r\n      {\r\n        id: \"ifc-11-001\",\r\n        name: \"IFC Conference Room 11A\",\r\n        location: \"IFC\",\r\n        floor: \"11th Floor\",\r\n        capacity: 10,\r\n        amenities: \"Projector, Whiteboard, Video Conference\",\r\n        status: \"vacant\",\r\n        bookings: [],\r\n        current_booking: null\r\n      },\r\n      \r\n      // IFC 12th Floor - 1 room\r\n      {\r\n        id: \"ifc-12-001\", \r\n        name: \"IFC Conference Room 12B\",\r\n        location: \"IFC\",\r\n        floor: \"12th Floor\",\r\n        capacity: 6,\r\n        amenities: \"Projector, Whiteboard\",\r\n        status: \"vacant\",\r\n        bookings: [],\r\n        current_booking: null\r\n      },\r\n      \r\n      // IFC 14th Floor - Multiple rooms (9 rooms as per test results)\r\n      {\r\n        id: \"ifc-14-001\",\r\n        name: \"OVAL MEETING ROOM\",\r\n        location: \"IFC\", \r\n        floor: \"14th Floor\",\r\n        capacity: 10,\r\n        amenities: \"Projector, Video Conference, Whiteboard\",\r\n        status: \"vacant\",\r\n        bookings: [],\r\n        current_booking: null\r\n      },\r\n      {\r\n        id: \"ifc-14-002\",\r\n        name: \"PETRONAS MEETING ROOM\",\r\n        location: \"IFC\",\r\n        floor: \"14th Floor\", \r\n        capacity: 5,\r\n        amenities: \"Projector, Whiteboard\",\r\n        status: \"vacant\",\r\n        bookings: [],\r\n        current_booking: null\r\n      },\r\n      {\r\n        id: \"ifc-14-003\",\r\n        name: \"GLOBAL CENTER MEETING ROOM\",\r\n        location: \"IFC\",\r\n        floor: \"14th Floor\",\r\n        capacity: 5,\r\n        amenities: \"Projector, Whiteboard\",\r\n        status: \"vacant\",\r\n        bookings: [],\r\n        current_booking: null\r\n      },\r\n      {\r\n        id: \"ifc-14-004\",\r\n        name: \"LOUVRE MEETING ROOM\",\r\n        location: \"IFC\",\r\n        floor: \"14th Floor\",\r\n        capacity: 5,\r\n        amenities: \"Projector, Whiteboard\",\r\n        status: \"vacant\",\r\n        bookings: [],\r\n        current_booking: null\r\n      },\r\n      {\r\n        id: \"ifc-14-005\",\r\n        name: \"GOLDEN GATE MEETING ROOM\",\r\n        location: \"IFC\",\r\n        floor: \"14th Floor\",\r\n        capacity: 10,\r\n        amenities: \"Projector, Video Conference, Whiteboard\",\r\n        status: \"vacant\",\r\n        bookings: [],\r\n        current_booking: null\r\n      },\r\n      {\r\n        id: \"ifc-14-006\",\r\n        name: \"EMPIRE STATE MEETING ROOM\",\r\n        location: \"IFC\",\r\n        floor: \"14th Floor\",\r\n        capacity: 5,\r\n        amenities: \"Projector, Whiteboard\",\r\n        status: \"vacant\",\r\n        bookings: [],\r\n        current_booking: null\r\n      },\r\n      {\r\n        id: \"ifc-14-007\",\r\n        name: \"MARINA BAY MEETING ROOM\",\r\n        location: \"IFC\",\r\n        floor: \"14th Floor\",\r\n        capacity: 5,\r\n        amenities: \"Projector, Whiteboard\",\r\n        status: \"vacant\",\r\n        bookings: [],\r\n        current_booking: null\r\n      },\r\n      {\r\n        id: \"ifc-14-008\",\r\n        name: \"BURJ MEETING ROOM\",\r\n        location: \"IFC\",\r\n        floor: \"14th Floor\",\r\n        capacity: 5,\r\n        amenities: \"Projector, Whiteboard\",\r\n        status: \"vacant\",\r\n        bookings: [],\r\n        current_booking: null\r\n      },\r\n      {\r\n        id: \"ifc-14-009\",\r\n        name: \"BOARD ROOM\",\r\n        location: \"IFC\",\r\n        floor: \"14th Floor\",\r\n        capacity: 20,\r\n        amenities: \"Projector, Video Conference, Whiteboard, Audio System\",\r\n        status: \"vacant\",\r\n        bookings: [],\r\n        current_booking: null\r\n      },\r\n      \r\n      // Other locations - 1 room each on floor 1\r\n      {\r\n        id: \"central-1-001\",\r\n        name: \"Central Office Conference Room\",\r\n        location: \"Central Office 75\",\r\n        floor: \"1st Floor\",\r\n        capacity: 8,\r\n        amenities: \"Projector, Whiteboard\",\r\n        status: \"vacant\",\r\n        bookings: [],\r\n        current_booking: null\r\n      },\r\n      {\r\n        id: \"office75-1-001\",\r\n        name: \"Office 75 Meeting Room\",\r\n        location: \"Office 75\",\r\n        floor: \"1st Floor\",\r\n        capacity: 6,\r\n        amenities: \"Projector, Whiteboard\",\r\n        status: \"vacant\",\r\n        bookings: [],\r\n        current_booking: null\r\n      },\r\n      {\r\n        id: \"noida-1-001\",\r\n        name: \"Noida Conference Room\",\r\n        location: \"Noida\",\r\n        floor: \"1st Floor\",\r\n        capacity: 12,\r\n        amenities: \"Projector, Video Conference, Whiteboard\",\r\n        status: \"vacant\",\r\n        bookings: [],\r\n        current_booking: null\r\n      },\r\n      {\r\n        id: \"project-1-001\",\r\n        name: \"Project Office Meeting Room\",\r\n        location: \"Project Office\",\r\n        floor: \"1st Floor\",\r\n        capacity: 8,\r\n        amenities: \"Projector, Whiteboard\",\r\n        status: \"vacant\",\r\n        bookings: [],\r\n        current_booking: null\r\n      }\r\n    ];\r\n    \r\n    // Save initial structure to storage\r\n    this.saveMeetingRoomsToStorage(rooms);\r\n    console.log(`Generated and saved ${rooms.length} meeting rooms`);\r\n    return rooms;\r\n  }\r\n\r\n  // Load meeting rooms from localStorage\r\n  loadMeetingRoomsFromStorage() {\r\n    try {\r\n      const saved = localStorage.getItem('meetingRooms_data');\r\n      if (saved) {\r\n        const parsed = JSON.parse(saved);\r\n        // Clean up expired bookings on load\r\n        this.cleanupExpiredBookings(parsed);\r\n        return parsed;\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading meeting rooms from storage:', error);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  // Save meeting rooms to localStorage\r\n  saveMeetingRoomsToStorage(rooms = null) {\r\n    try {\r\n      const roomsToSave = rooms || this.meetingRooms;\r\n      localStorage.setItem('meetingRooms_data', JSON.stringify(roomsToSave));\r\n      localStorage.setItem('meetingRooms_lastSaved', new Date().toISOString());\r\n    } catch (error) {\r\n      console.error('Error saving meeting rooms to storage:', error);\r\n    }\r\n  }\r\n\r\n  // Clean up expired bookings\r\n  cleanupExpiredBookings(rooms) {\r\n    const now = new Date();\r\n    rooms.forEach(room => {\r\n      if (room.current_booking) {\r\n        const endTime = new Date(room.current_booking.end_time);\r\n        if (endTime < now) {\r\n          room.status = 'vacant';\r\n          room.current_booking = null;\r\n          room.bookings = [];\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  // Generate sample policies\r\n  generateSamplePolicies() {\r\n    return [\r\n      {\r\n        id: \"policy_001\",\r\n        title: \"Employee Code of Conduct\",\r\n        category: \"hr\",\r\n        content: \"Guidelines for professional behavior and conduct\",\r\n        effective_date: \"2024-01-01\",\r\n        version: \"1.0\"\r\n      },\r\n      {\r\n        id: \"policy_002\", \r\n        title: \"IT Security Policy\",\r\n        category: \"it\",\r\n        content: \"Information technology security guidelines and procedures\",\r\n        effective_date: \"2024-01-01\",\r\n        version: \"1.0\"\r\n      }\r\n    ];\r\n  }\r\n\r\n  // Employee API methods\r\n  async getEmployees(searchParams = {}) {\r\n    if (!this.isLoaded) await this.loadAllData();\r\n    \r\n    let filtered = [...this.employees];\r\n    \r\n    if (searchParams.search) {\r\n      const search = searchParams.search.toLowerCase();\r\n      filtered = filtered.filter(emp => \r\n        emp.name.toLowerCase().startsWith(search) ||\r\n        emp.id.toLowerCase().startsWith(search) ||\r\n        emp.department.toLowerCase().startsWith(search) ||\r\n        emp.location.toLowerCase().startsWith(search) ||\r\n        emp.grade.toLowerCase().startsWith(search) ||\r\n        emp.mobile.startsWith(search)\r\n      );\r\n    }\r\n    \r\n    if (searchParams.department && searchParams.department !== 'All Departments') {\r\n      filtered = filtered.filter(emp => emp.department === searchParams.department);\r\n    }\r\n    \r\n    if (searchParams.location && searchParams.location !== 'All Locations') {\r\n      filtered = filtered.filter(emp => emp.location === searchParams.location);\r\n    }\r\n    \r\n    return filtered;\r\n  }\r\n\r\n  async updateEmployeeImage(employeeId, imageData) {\r\n    if (!this.isLoaded) await this.loadAllData();\r\n    \r\n    const employee = this.employees.find(emp => emp.id === employeeId);\r\n    if (employee) {\r\n      employee.profileImage = imageData.profileImage || imageData;\r\n      return employee;\r\n    }\r\n    throw new Error('Employee not found');\r\n  }\r\n\r\n  // Utility methods\r\n  async getDepartments() {\r\n    if (!this.isLoaded) await this.loadAllData();\r\n    return this.departments;\r\n  }\r\n\r\n  async getLocations() {\r\n    if (!this.isLoaded) await this.loadAllData();\r\n    return this.locations;\r\n  }\r\n\r\n  async getStats() {\r\n    if (!this.isLoaded) await this.loadAllData();\r\n    \r\n    return {\r\n      database: {\r\n        employees: this.employees.length,\r\n        departments: this.departments.length - 1, // Exclude \"All Departments\"\r\n        locations: this.locations.length - 1, // Exclude \"All Locations\"\r\n        attendance_records: this.attendance.length,\r\n        hierarchy_relations: this.hierarchy.length\r\n      },\r\n      excel: {\r\n        total_employees: this.employees.length,\r\n        departments_count: this.departments.length - 1,\r\n        locations_count: this.locations.length - 1\r\n      }\r\n    };\r\n  }\r\n\r\n  // Hierarchy methods\r\n  async getHierarchy() {\r\n    return this.hierarchy;\r\n  }\r\n\r\n  async createHierarchy(relationshipData) {\r\n    const newRelation = {\r\n      id: `hier_${Date.now()}`,\r\n      ...relationshipData,\r\n      created_at: new Date().toISOString()\r\n    };\r\n    this.hierarchy.push(newRelation);\r\n    return newRelation;\r\n  }\r\n\r\n  async deleteHierarchy(relationId) {\r\n    const index = this.hierarchy.findIndex(h => h.id === relationId);\r\n    if (index > -1) {\r\n      this.hierarchy.splice(index, 1);\r\n      return { message: 'Hierarchy relationship deleted' };\r\n    }\r\n    throw new Error('Hierarchy relationship not found');\r\n  }\r\n\r\n  async clearAllHierarchy() {\r\n    this.hierarchy = [];\r\n    return { message: 'All hierarchy relationships cleared' };\r\n  }\r\n\r\n  // News methods\r\n  async getNews() {\r\n    return this.news;\r\n  }\r\n\r\n  async createNews(newsData) {\r\n    const newNews = {\r\n      id: `news_${Date.now()}`,\r\n      ...newsData,\r\n      created_at: new Date().toISOString(),\r\n      updated_at: new Date().toISOString()\r\n    };\r\n    this.news.unshift(newNews);\r\n    return newNews;\r\n  }\r\n\r\n  async updateNews(id, newsData) {\r\n    const index = this.news.findIndex(n => n.id === id);\r\n    if (index > -1) {\r\n      this.news[index] = {\r\n        ...this.news[index],\r\n        ...newsData,\r\n        updated_at: new Date().toISOString()\r\n      };\r\n      return this.news[index];\r\n    }\r\n    throw new Error('News not found');\r\n  }\r\n\r\n  async deleteNews(id) {\r\n    const index = this.news.findIndex(n => n.id === id);\r\n    if (index > -1) {\r\n      this.news.splice(index, 1);\r\n      return { message: 'News deleted' };\r\n    }\r\n    throw new Error('News not found');\r\n  }\r\n\r\n  // Task methods\r\n  async getTasks() {\r\n    return this.tasks;\r\n  }\r\n\r\n  async createTask(taskData) {\r\n    const newTask = {\r\n      id: `task_${Date.now()}`,\r\n      ...taskData,\r\n      created_at: new Date().toISOString(),\r\n      updated_at: new Date().toISOString()\r\n    };\r\n    this.tasks.unshift(newTask);\r\n    return newTask;\r\n  }\r\n\r\n  async updateTask(id, taskData) {\r\n    const index = this.tasks.findIndex(t => t.id === id);\r\n    if (index > -1) {\r\n      this.tasks[index] = {\r\n        ...this.tasks[index],\r\n        ...taskData,\r\n        updated_at: new Date().toISOString()\r\n      };\r\n      return this.tasks[index];\r\n    }\r\n    throw new Error('Task not found');\r\n  }\r\n\r\n  async deleteTask(id) {\r\n    const index = this.tasks.findIndex(t => t.id === id);\r\n    if (index > -1) {\r\n      this.tasks.splice(index, 1);\r\n      return { message: 'Task deleted' };\r\n    }\r\n    throw new Error('Task not found');\r\n  }\r\n\r\n  // Knowledge methods\r\n  async getKnowledge() {\r\n    return this.knowledge;\r\n  }\r\n\r\n  async createKnowledge(knowledgeData) {\r\n    const newKnowledge = {\r\n      id: `knowledge_${Date.now()}`,\r\n      ...knowledgeData,\r\n      created_at: new Date().toISOString(),\r\n      updated_at: new Date().toISOString()\r\n    };\r\n    this.knowledge.unshift(newKnowledge);\r\n    return newKnowledge;\r\n  }\r\n\r\n  async updateKnowledge(id, knowledgeData) {\r\n    const index = this.knowledge.findIndex(k => k.id === id);\r\n    if (index > -1) {\r\n      this.knowledge[index] = {\r\n        ...this.knowledge[index],\r\n        ...knowledgeData,\r\n        updated_at: new Date().toISOString()\r\n      };\r\n      return this.knowledge[index];\r\n    }\r\n    throw new Error('Knowledge not found');\r\n  }\r\n\r\n  async deleteKnowledge(id) {\r\n    const index = this.knowledge.findIndex(k => k.id === id);\r\n    if (index > -1) {\r\n      this.knowledge.splice(index, 1);\r\n      return { message: 'Knowledge deleted' };\r\n    }\r\n    throw new Error('Knowledge not found');\r\n  }\r\n\r\n  // Help methods\r\n  async getHelp() {\r\n    return this.help;\r\n  }\r\n\r\n  async createHelp(helpData) {\r\n    const newHelp = {\r\n      id: `help_${Date.now()}`,\r\n      ...helpData,\r\n      replies: [],\r\n      created_at: new Date().toISOString(),\r\n      updated_at: new Date().toISOString()\r\n    };\r\n    this.help.unshift(newHelp);\r\n    return newHelp;\r\n  }\r\n\r\n  async updateHelp(id, helpData) {\r\n    const index = this.help.findIndex(h => h.id === id);\r\n    if (index > -1) {\r\n      this.help[index] = {\r\n        ...this.help[index],\r\n        ...helpData,\r\n        updated_at: new Date().toISOString()\r\n      };\r\n      return this.help[index];\r\n    }\r\n    throw new Error('Help request not found');\r\n  }\r\n\r\n  async addHelpReply(id, replyData) {\r\n    const index = this.help.findIndex(h => h.id === id);\r\n    if (index > -1) {\r\n      const reply = {\r\n        id: `reply_${Date.now()}`,\r\n        ...replyData,\r\n        created_at: new Date().toISOString()\r\n      };\r\n      this.help[index].replies.push(reply);\r\n      this.help[index].updated_at = new Date().toISOString();\r\n      return reply;\r\n    }\r\n    throw new Error('Help request not found');\r\n  }\r\n\r\n  async deleteHelp(id) {\r\n    const index = this.help.findIndex(h => h.id === id);\r\n    if (index > -1) {\r\n      this.help.splice(index, 1);\r\n      return { message: 'Help request deleted' };\r\n    }\r\n    throw new Error('Help request not found');\r\n  }\r\n\r\n  // Meeting Rooms methods\r\n  async getMeetingRooms(filters = {}) {\r\n    // Clean up expired bookings first\r\n    this.cleanupExpiredBookings(this.meetingRooms);\r\n    \r\n    let filtered = [...this.meetingRooms];\r\n    \r\n    if (filters.location) {\r\n      filtered = filtered.filter(room => room.location === filters.location);\r\n    }\r\n    \r\n    if (filters.floor) {\r\n      filtered = filtered.filter(room => room.floor === filters.floor);\r\n    }\r\n    \r\n    if (filters.status) {\r\n      filtered = filtered.filter(room => room.status === filters.status);\r\n    }\r\n    \r\n    // Save any changes made by cleanup\r\n    this.saveMeetingRoomsToStorage();\r\n    \r\n    return filtered;\r\n  }\r\n\r\n  async bookMeetingRoom(roomId, bookingData) {\r\n    const room = this.meetingRooms.find(r => r.id === roomId);\r\n    if (!room) {\r\n      throw new Error('Meeting room not found');\r\n    }\r\n\r\n    // Check if room is already booked\r\n    if (room.status === 'occupied') {\r\n      throw new Error('Room is already booked. Multiple bookings are not allowed.');\r\n    }\r\n\r\n    // Validate booking times\r\n    const startTime = new Date(bookingData.start_time);\r\n    const endTime = new Date(bookingData.end_time);\r\n    const now = new Date();\r\n\r\n    if (startTime < now) {\r\n      throw new Error('Cannot book a room for past time');\r\n    }\r\n\r\n    if (endTime <= startTime) {\r\n      throw new Error('End time must be after start time');\r\n    }\r\n\r\n    const booking = {\r\n      id: `booking_${Date.now()}`,\r\n      ...bookingData,\r\n      room_id: roomId,\r\n      room_name: room.name,\r\n      created_at: new Date().toISOString()\r\n    };\r\n\r\n    room.bookings = [booking];\r\n    room.current_booking = booking;\r\n    room.status = 'occupied';\r\n\r\n    // Save to localStorage\r\n    this.saveMeetingRoomsToStorage();\r\n\r\n    console.log(`Room ${room.name} booked successfully for ${booking.employee_name}`);\r\n    return booking;\r\n  }\r\n\r\n  async cancelMeetingRoomBooking(roomId, bookingId = null) {\r\n    const room = this.meetingRooms.find(r => r.id === roomId);\r\n    if (!room) {\r\n      throw new Error('Meeting room not found');\r\n    }\r\n\r\n    if (room.status === 'vacant') {\r\n      throw new Error('No booking found to cancel');\r\n    }\r\n\r\n    const roomName = room.name;\r\n    const employeeName = room.current_booking ? room.current_booking.employee_name : 'Unknown';\r\n\r\n    room.bookings = [];\r\n    room.current_booking = null;\r\n    room.status = 'vacant';\r\n\r\n    // Save to localStorage\r\n    this.saveMeetingRoomsToStorage();\r\n\r\n    console.log(`Booking cancelled for ${roomName} (previously booked by ${employeeName})`);\r\n    return { message: 'Booking cancelled successfully', room_name: roomName };\r\n  }\r\n\r\n  async clearAllMeetingRoomBookings() {\r\n    let cancelledCount = 0;\r\n    \r\n    this.meetingRooms.forEach(room => {\r\n      if (room.status === 'occupied') {\r\n        cancelledCount++;\r\n      }\r\n      room.bookings = [];\r\n      room.current_booking = null;\r\n      room.status = 'vacant';\r\n    });\r\n\r\n    // Save to localStorage\r\n    this.saveMeetingRoomsToStorage();\r\n\r\n    console.log(`Cleared all bookings: ${cancelledCount} rooms were occupied, now all ${this.meetingRooms.length} rooms are vacant`);\r\n    return { \r\n      message: 'All bookings cleared successfully',\r\n      rooms_updated: this.meetingRooms.length,\r\n      previously_occupied: cancelledCount\r\n    };\r\n  }\r\n\r\n  // Attendance methods\r\n  async getAttendance(searchParams = {}) {\r\n    let filtered = [...this.attendance];\r\n    \r\n    if (searchParams.search) {\r\n      const search = searchParams.search.toLowerCase();\r\n      filtered = filtered.filter(att => \r\n        att.employee_name.toLowerCase().startsWith(search) ||\r\n        att.employee_id.toLowerCase().startsWith(search)\r\n      );\r\n    }\r\n    \r\n    return filtered;\r\n  }\r\n\r\n  async createAttendance(attendanceData) {\r\n    const newAttendance = {\r\n      id: `att_${Date.now()}`,\r\n      ...attendanceData,\r\n      created_at: new Date().toISOString(),\r\n      updated_at: new Date().toISOString()\r\n    };\r\n    this.attendance.unshift(newAttendance);\r\n    return newAttendance;\r\n  }\r\n\r\n  // Policies methods\r\n  async getPolicies() {\r\n    return this.policies;\r\n  }\r\n\r\n  async createPolicy(policyData) {\r\n    const newPolicy = {\r\n      id: `policy_${Date.now()}`,\r\n      ...policyData,\r\n      created_at: new Date().toISOString(),\r\n      updated_at: new Date().toISOString()\r\n    };\r\n    this.policies.unshift(newPolicy);\r\n    return newPolicy;\r\n  }\r\n\r\n  // Workflows methods\r\n  async getWorkflows() {\r\n    return this.workflows;\r\n  }\r\n\r\n  async createWorkflow(workflowData) {\r\n    const newWorkflow = {\r\n      id: `workflow_${Date.now()}`,\r\n      ...workflowData,\r\n      created_at: new Date().toISOString(),\r\n      updated_at: new Date().toISOString()\r\n    };\r\n    this.workflows.unshift(newWorkflow);\r\n    return newWorkflow;\r\n  }\r\n\r\n  // ===== ALERTS MANAGEMENT =====\r\n  \r\n  // Get all alerts\r\n  getAlerts() {\r\n    return this.alerts;\r\n  }\r\n\r\n  // Get active alerts (for user display)\r\n  getActiveAlerts() {\r\n    const now = new Date();\r\n    return this.alerts.filter(alert => \r\n      alert.isActive && \r\n      (!alert.expiryDate || new Date(alert.expiryDate) > now)\r\n    );\r\n  }\r\n\r\n  // Create a new alert (Admin only)\r\n  createAlert(alertData) {\r\n    const newAlert = {\r\n      id: `alert_${Date.now()}`,\r\n      title: alertData.title || 'Alert',\r\n      message: alertData.message || '',\r\n      type: alertData.type || 'info', // info, warning, success, error\r\n      priority: alertData.priority || 'normal', // high, normal, low\r\n      isActive: alertData.isActive !== undefined ? alertData.isActive : true,\r\n      expiryDate: alertData.expiryDate || null,\r\n      created_at: new Date().toISOString(),\r\n      updated_at: new Date().toISOString(),\r\n      createdBy: alertData.createdBy || 'admin'\r\n    };\r\n    this.alerts.unshift(newAlert);\r\n    return newAlert;\r\n  }\r\n\r\n  // Update alert (Admin only)\r\n  updateAlert(alertId, alertData) {\r\n    const alertIndex = this.alerts.findIndex(alert => alert.id === alertId);\r\n    if (alertIndex === -1) {\r\n      throw new Error('Alert not found');\r\n    }\r\n\r\n    this.alerts[alertIndex] = {\r\n      ...this.alerts[alertIndex],\r\n      ...alertData,\r\n      updated_at: new Date().toISOString()\r\n    };\r\n    \r\n    return this.alerts[alertIndex];\r\n  }\r\n\r\n  // Delete alert (Admin only)\r\n  deleteAlert(alertId) {\r\n    const alertIndex = this.alerts.findIndex(alert => alert.id === alertId);\r\n    if (alertIndex === -1) {\r\n      throw new Error('Alert not found');\r\n    }\r\n\r\n    const deletedAlert = this.alerts.splice(alertIndex, 1)[0];\r\n    return deletedAlert;\r\n  }\r\n\r\n  // Toggle alert status (Admin only)\r\n  toggleAlertStatus(alertId) {\r\n    const alert = this.alerts.find(alert => alert.id === alertId);\r\n    if (!alert) {\r\n      throw new Error('Alert not found');\r\n    }\r\n\r\n    alert.isActive = !alert.isActive;\r\n    alert.updated_at = new Date().toISOString();\r\n    return alert;\r\n  }\r\n\r\n  // Initialize demo alerts for testing\r\n  initializeDemoAlerts() {\r\n    // Only add demo alerts if alerts array is empty\r\n    if (this.alerts.length === 0) {\r\n      const demoAlerts = [\r\n        {\r\n          id: 'alert_demo_1',\r\n          title: 'Welcome to SmartWorld!',\r\n          message: 'Welcome to the SmartWorld Employee Management System. We are excited to have you on board!',\r\n          type: 'success',\r\n          priority: 'high',\r\n          isActive: true,\r\n          expiryDate: null,\r\n          created_at: new Date().toISOString(),\r\n          updated_at: new Date().toISOString(),\r\n          createdBy: 'system'\r\n        },\r\n        {\r\n          id: 'alert_demo_2',\r\n          title: 'System Updates',\r\n          message: 'New features have been added to the system. Check out the enhanced employee directory and meeting room booking system.',\r\n          type: 'info',\r\n          priority: 'normal',\r\n          isActive: true,\r\n          expiryDate: null,\r\n          created_at: new Date().toISOString(),\r\n          updated_at: new Date().toISOString(),\r\n          createdBy: 'system'\r\n        }\r\n      ];\r\n      \r\n      this.alerts = demoAlerts;\r\n      console.log('Demo alerts initialized:', this.alerts.length);\r\n    }\r\n  }\r\n}\r\n\r\n// Create singleton instance\r\nconst dataService = new DataService();\r\n\r\nexport default dataService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}