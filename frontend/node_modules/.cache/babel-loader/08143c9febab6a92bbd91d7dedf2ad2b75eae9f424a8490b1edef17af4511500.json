{"ast":null,"code":"\"use client\";\n\n// src/popover.tsx\nimport _objectWithoutProperties from \"D:/SMARTDESK APPLICATION FILES/EMPLOYEE_DIR_BETA1/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _objectSpread from \"D:/SMARTDESK APPLICATION FILES/EMPLOYEE_DIR_BETA1/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nconst _excluded = [\"__scopePopover\"],\n  _excluded2 = [\"__scopePopover\"],\n  _excluded3 = [\"forceMount\"],\n  _excluded4 = [\"__scopePopover\", \"trapFocus\", \"onOpenAutoFocus\", \"onCloseAutoFocus\", \"disableOutsidePointerEvents\", \"onEscapeKeyDown\", \"onPointerDownOutside\", \"onFocusOutside\", \"onInteractOutside\"],\n  _excluded5 = [\"__scopePopover\"],\n  _excluded6 = [\"__scopePopover\"];\nimport * as React from \"react\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { DismissableLayer } from \"@radix-ui/react-dismissable-layer\";\nimport { useFocusGuards } from \"@radix-ui/react-focus-guards\";\nimport { FocusScope } from \"@radix-ui/react-focus-scope\";\nimport { useId } from \"@radix-ui/react-id\";\nimport * as PopperPrimitive from \"@radix-ui/react-popper\";\nimport { createPopperScope } from \"@radix-ui/react-popper\";\nimport { Portal as PortalPrimitive } from \"@radix-ui/react-portal\";\nimport { Presence } from \"@radix-ui/react-presence\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { createSlot } from \"@radix-ui/react-slot\";\nimport { useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { hideOthers } from \"aria-hidden\";\nimport { RemoveScroll } from \"react-remove-scroll\";\nimport { jsx } from \"react/jsx-runtime\";\nvar POPOVER_NAME = \"Popover\";\nvar [createPopoverContext, createPopoverScope] = createContextScope(POPOVER_NAME, [createPopperScope]);\nvar usePopperScope = createPopperScope();\nvar [PopoverProvider, usePopoverContext] = createPopoverContext(POPOVER_NAME);\nvar Popover = props => {\n  const {\n    __scopePopover,\n    children,\n    open: openProp,\n    defaultOpen,\n    onOpenChange,\n    modal = false\n  } = props;\n  const popperScope = usePopperScope(__scopePopover);\n  const triggerRef = React.useRef(null);\n  const [hasCustomAnchor, setHasCustomAnchor] = React.useState(false);\n  const [open, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen !== null && defaultOpen !== void 0 ? defaultOpen : false,\n    onChange: onOpenChange,\n    caller: POPOVER_NAME\n  });\n  return /* @__PURE__ */jsx(PopperPrimitive.Root, _objectSpread(_objectSpread({}, popperScope), {}, {\n    children: /* @__PURE__ */jsx(PopoverProvider, {\n      scope: __scopePopover,\n      contentId: useId(),\n      triggerRef,\n      open,\n      onOpenChange: setOpen,\n      onOpenToggle: React.useCallback(() => setOpen(prevOpen => !prevOpen), [setOpen]),\n      hasCustomAnchor,\n      onCustomAnchorAdd: React.useCallback(() => setHasCustomAnchor(true), []),\n      onCustomAnchorRemove: React.useCallback(() => setHasCustomAnchor(false), []),\n      modal,\n      children\n    })\n  }));\n};\nPopover.displayName = POPOVER_NAME;\nvar ANCHOR_NAME = \"PopoverAnchor\";\nvar PopoverAnchor = React.forwardRef((props, forwardedRef) => {\n  const {\n      __scopePopover\n    } = props,\n    anchorProps = _objectWithoutProperties(props, _excluded);\n  const context = usePopoverContext(ANCHOR_NAME, __scopePopover);\n  const popperScope = usePopperScope(__scopePopover);\n  const {\n    onCustomAnchorAdd,\n    onCustomAnchorRemove\n  } = context;\n  React.useEffect(() => {\n    onCustomAnchorAdd();\n    return () => onCustomAnchorRemove();\n  }, [onCustomAnchorAdd, onCustomAnchorRemove]);\n  return /* @__PURE__ */jsx(PopperPrimitive.Anchor, _objectSpread(_objectSpread(_objectSpread({}, popperScope), anchorProps), {}, {\n    ref: forwardedRef\n  }));\n});\nPopoverAnchor.displayName = ANCHOR_NAME;\nvar TRIGGER_NAME = \"PopoverTrigger\";\nvar PopoverTrigger = React.forwardRef((props, forwardedRef) => {\n  const {\n      __scopePopover\n    } = props,\n    triggerProps = _objectWithoutProperties(props, _excluded2);\n  const context = usePopoverContext(TRIGGER_NAME, __scopePopover);\n  const popperScope = usePopperScope(__scopePopover);\n  const composedTriggerRef = useComposedRefs(forwardedRef, context.triggerRef);\n  const trigger = /* @__PURE__ */jsx(Primitive.button, _objectSpread(_objectSpread({\n    type: \"button\",\n    \"aria-haspopup\": \"dialog\",\n    \"aria-expanded\": context.open,\n    \"aria-controls\": context.contentId,\n    \"data-state\": getState(context.open)\n  }, triggerProps), {}, {\n    ref: composedTriggerRef,\n    onClick: composeEventHandlers(props.onClick, context.onOpenToggle)\n  }));\n  return context.hasCustomAnchor ? trigger : /* @__PURE__ */jsx(PopperPrimitive.Anchor, _objectSpread(_objectSpread({\n    asChild: true\n  }, popperScope), {}, {\n    children: trigger\n  }));\n});\nPopoverTrigger.displayName = TRIGGER_NAME;\nvar PORTAL_NAME = \"PopoverPortal\";\nvar [PortalProvider, usePortalContext] = createPopoverContext(PORTAL_NAME, {\n  forceMount: void 0\n});\nvar PopoverPortal = props => {\n  const {\n    __scopePopover,\n    forceMount,\n    children,\n    container\n  } = props;\n  const context = usePopoverContext(PORTAL_NAME, __scopePopover);\n  return /* @__PURE__ */jsx(PortalProvider, {\n    scope: __scopePopover,\n    forceMount,\n    children: /* @__PURE__ */jsx(Presence, {\n      present: forceMount || context.open,\n      children: /* @__PURE__ */jsx(PortalPrimitive, {\n        asChild: true,\n        container,\n        children\n      })\n    })\n  });\n};\nPopoverPortal.displayName = PORTAL_NAME;\nvar CONTENT_NAME = \"PopoverContent\";\nvar PopoverContent = React.forwardRef((props, forwardedRef) => {\n  const portalContext = usePortalContext(CONTENT_NAME, props.__scopePopover);\n  const {\n      forceMount = portalContext.forceMount\n    } = props,\n    contentProps = _objectWithoutProperties(props, _excluded3);\n  const context = usePopoverContext(CONTENT_NAME, props.__scopePopover);\n  return /* @__PURE__ */jsx(Presence, {\n    present: forceMount || context.open,\n    children: context.modal ? /* @__PURE__ */jsx(PopoverContentModal, _objectSpread(_objectSpread({}, contentProps), {}, {\n      ref: forwardedRef\n    })) : /* @__PURE__ */jsx(PopoverContentNonModal, _objectSpread(_objectSpread({}, contentProps), {}, {\n      ref: forwardedRef\n    }))\n  });\n});\nPopoverContent.displayName = CONTENT_NAME;\nvar Slot = createSlot(\"PopoverContent.RemoveScroll\");\nvar PopoverContentModal = React.forwardRef((props, forwardedRef) => {\n  const context = usePopoverContext(CONTENT_NAME, props.__scopePopover);\n  const contentRef = React.useRef(null);\n  const composedRefs = useComposedRefs(forwardedRef, contentRef);\n  const isRightClickOutsideRef = React.useRef(false);\n  React.useEffect(() => {\n    const content = contentRef.current;\n    if (content) return hideOthers(content);\n  }, []);\n  return /* @__PURE__ */jsx(RemoveScroll, {\n    as: Slot,\n    allowPinchZoom: true,\n    children: /* @__PURE__ */jsx(PopoverContentImpl, _objectSpread(_objectSpread({}, props), {}, {\n      ref: composedRefs,\n      trapFocus: context.open,\n      disableOutsidePointerEvents: true,\n      onCloseAutoFocus: composeEventHandlers(props.onCloseAutoFocus, event => {\n        var _context$triggerRef$c;\n        event.preventDefault();\n        if (!isRightClickOutsideRef.current) (_context$triggerRef$c = context.triggerRef.current) === null || _context$triggerRef$c === void 0 || _context$triggerRef$c.focus();\n      }),\n      onPointerDownOutside: composeEventHandlers(props.onPointerDownOutside, event => {\n        const originalEvent = event.detail.originalEvent;\n        const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;\n        const isRightClick = originalEvent.button === 2 || ctrlLeftClick;\n        isRightClickOutsideRef.current = isRightClick;\n      }, {\n        checkForDefaultPrevented: false\n      }),\n      onFocusOutside: composeEventHandlers(props.onFocusOutside, event => event.preventDefault(), {\n        checkForDefaultPrevented: false\n      })\n    }))\n  });\n});\nvar PopoverContentNonModal = React.forwardRef((props, forwardedRef) => {\n  const context = usePopoverContext(CONTENT_NAME, props.__scopePopover);\n  const hasInteractedOutsideRef = React.useRef(false);\n  const hasPointerDownOutsideRef = React.useRef(false);\n  return /* @__PURE__ */jsx(PopoverContentImpl, _objectSpread(_objectSpread({}, props), {}, {\n    ref: forwardedRef,\n    trapFocus: false,\n    disableOutsidePointerEvents: false,\n    onCloseAutoFocus: event => {\n      var _props$onCloseAutoFoc;\n      (_props$onCloseAutoFoc = props.onCloseAutoFocus) === null || _props$onCloseAutoFoc === void 0 || _props$onCloseAutoFoc.call(props, event);\n      if (!event.defaultPrevented) {\n        var _context$triggerRef$c2;\n        if (!hasInteractedOutsideRef.current) (_context$triggerRef$c2 = context.triggerRef.current) === null || _context$triggerRef$c2 === void 0 || _context$triggerRef$c2.focus();\n        event.preventDefault();\n      }\n      hasInteractedOutsideRef.current = false;\n      hasPointerDownOutsideRef.current = false;\n    },\n    onInteractOutside: event => {\n      var _props$onInteractOuts, _context$triggerRef$c3;\n      (_props$onInteractOuts = props.onInteractOutside) === null || _props$onInteractOuts === void 0 || _props$onInteractOuts.call(props, event);\n      if (!event.defaultPrevented) {\n        hasInteractedOutsideRef.current = true;\n        if (event.detail.originalEvent.type === \"pointerdown\") {\n          hasPointerDownOutsideRef.current = true;\n        }\n      }\n      const target = event.target;\n      const targetIsTrigger = (_context$triggerRef$c3 = context.triggerRef.current) === null || _context$triggerRef$c3 === void 0 ? void 0 : _context$triggerRef$c3.contains(target);\n      if (targetIsTrigger) event.preventDefault();\n      if (event.detail.originalEvent.type === \"focusin\" && hasPointerDownOutsideRef.current) {\n        event.preventDefault();\n      }\n    }\n  }));\n});\nvar PopoverContentImpl = React.forwardRef((props, forwardedRef) => {\n  const {\n      __scopePopover,\n      trapFocus,\n      onOpenAutoFocus,\n      onCloseAutoFocus,\n      disableOutsidePointerEvents,\n      onEscapeKeyDown,\n      onPointerDownOutside,\n      onFocusOutside,\n      onInteractOutside\n    } = props,\n    contentProps = _objectWithoutProperties(props, _excluded4);\n  const context = usePopoverContext(CONTENT_NAME, __scopePopover);\n  const popperScope = usePopperScope(__scopePopover);\n  useFocusGuards();\n  return /* @__PURE__ */jsx(FocusScope, {\n    asChild: true,\n    loop: true,\n    trapped: trapFocus,\n    onMountAutoFocus: onOpenAutoFocus,\n    onUnmountAutoFocus: onCloseAutoFocus,\n    children: /* @__PURE__ */jsx(DismissableLayer, {\n      asChild: true,\n      disableOutsidePointerEvents,\n      onInteractOutside,\n      onEscapeKeyDown,\n      onPointerDownOutside,\n      onFocusOutside,\n      onDismiss: () => context.onOpenChange(false),\n      children: /* @__PURE__ */jsx(PopperPrimitive.Content, _objectSpread(_objectSpread(_objectSpread({\n        \"data-state\": getState(context.open),\n        role: \"dialog\",\n        id: context.contentId\n      }, popperScope), contentProps), {}, {\n        ref: forwardedRef,\n        style: _objectSpread(_objectSpread({}, contentProps.style), {\n          \"--radix-popover-content-transform-origin\": \"var(--radix-popper-transform-origin)\",\n          \"--radix-popover-content-available-width\": \"var(--radix-popper-available-width)\",\n          \"--radix-popover-content-available-height\": \"var(--radix-popper-available-height)\",\n          \"--radix-popover-trigger-width\": \"var(--radix-popper-anchor-width)\",\n          \"--radix-popover-trigger-height\": \"var(--radix-popper-anchor-height)\"\n        })\n      }))\n    })\n  });\n});\nvar CLOSE_NAME = \"PopoverClose\";\nvar PopoverClose = React.forwardRef((props, forwardedRef) => {\n  const {\n      __scopePopover\n    } = props,\n    closeProps = _objectWithoutProperties(props, _excluded5);\n  const context = usePopoverContext(CLOSE_NAME, __scopePopover);\n  return /* @__PURE__ */jsx(Primitive.button, _objectSpread(_objectSpread({\n    type: \"button\"\n  }, closeProps), {}, {\n    ref: forwardedRef,\n    onClick: composeEventHandlers(props.onClick, () => context.onOpenChange(false))\n  }));\n});\nPopoverClose.displayName = CLOSE_NAME;\nvar ARROW_NAME = \"PopoverArrow\";\nvar PopoverArrow = React.forwardRef((props, forwardedRef) => {\n  const {\n      __scopePopover\n    } = props,\n    arrowProps = _objectWithoutProperties(props, _excluded6);\n  const popperScope = usePopperScope(__scopePopover);\n  return /* @__PURE__ */jsx(PopperPrimitive.Arrow, _objectSpread(_objectSpread(_objectSpread({}, popperScope), arrowProps), {}, {\n    ref: forwardedRef\n  }));\n});\nPopoverArrow.displayName = ARROW_NAME;\nfunction getState(open) {\n  return open ? \"open\" : \"closed\";\n}\nvar Root2 = Popover;\nvar Anchor2 = PopoverAnchor;\nvar Trigger = PopoverTrigger;\nvar Portal = PopoverPortal;\nvar Content2 = PopoverContent;\nvar Close = PopoverClose;\nvar Arrow2 = PopoverArrow;\nexport { Anchor2 as Anchor, Arrow2 as Arrow, Close, Content2 as Content, Popover, PopoverAnchor, PopoverArrow, PopoverClose, PopoverContent, PopoverPortal, PopoverTrigger, Portal, Root2 as Root, Trigger, createPopoverScope };","map":{"version":3,"names":["React","composeEventHandlers","useComposedRefs","createContextScope","DismissableLayer","useFocusGuards","FocusScope","useId","PopperPrimitive","createPopperScope","Portal","PortalPrimitive","Presence","Primitive","createSlot","useControllableState","hideOthers","RemoveScroll","jsx","POPOVER_NAME","createPopoverContext","createPopoverScope","usePopperScope","PopoverProvider","usePopoverContext","Popover","props","__scopePopover","children","open","openProp","defaultOpen","onOpenChange","modal","popperScope","triggerRef","useRef","hasCustomAnchor","setHasCustomAnchor","useState","setOpen","prop","defaultProp","onChange","caller","Root","_objectSpread","scope","contentId","onOpenToggle","useCallback","prevOpen","onCustomAnchorAdd","onCustomAnchorRemove","displayName","ANCHOR_NAME","PopoverAnchor","forwardRef","forwardedRef","anchorProps","_objectWithoutProperties","_excluded","context","useEffect","Anchor","ref","TRIGGER_NAME","PopoverTrigger","triggerProps","_excluded2","composedTriggerRef","trigger","button","type","getState","onClick","asChild","PORTAL_NAME","PortalProvider","usePortalContext","forceMount","PopoverPortal","container","present","CONTENT_NAME","PopoverContent","portalContext","contentProps","_excluded3","PopoverContentModal","PopoverContentNonModal","Slot","contentRef","composedRefs","isRightClickOutsideRef","content","current","as","allowPinchZoom","PopoverContentImpl","trapFocus","disableOutsidePointerEvents","onCloseAutoFocus","event","_context$triggerRef$c","preventDefault","focus","onPointerDownOutside","originalEvent","detail","ctrlLeftClick","ctrlKey","isRightClick","checkForDefaultPrevented","onFocusOutside","hasInteractedOutsideRef","hasPointerDownOutsideRef","_props$onCloseAutoFoc","call","defaultPrevented","_context$triggerRef$c2","onInteractOutside","_props$onInteractOuts","_context$triggerRef$c3","target","targetIsTrigger","contains","onOpenAutoFocus","onEscapeKeyDown","_excluded4","loop","trapped","onMountAutoFocus","onUnmountAutoFocus","onDismiss","Content","role","id","style","CLOSE_NAME","PopoverClose","closeProps","_excluded5","ARROW_NAME","PopoverArrow","arrowProps","_excluded6","Arrow","Root2","Anchor2","Trigger","Content2","Close","Arrow2"],"sources":["D:\\SMARTDESK APPLICATION FILES\\EMPLOYEE_DIR_BETA1\\frontend\\node_modules\\@radix-ui\\react-popover\\src\\popover.tsx"],"sourcesContent":["import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { DismissableLayer } from '@radix-ui/react-dismissable-layer';\nimport { useFocusGuards } from '@radix-ui/react-focus-guards';\nimport { FocusScope } from '@radix-ui/react-focus-scope';\nimport { useId } from '@radix-ui/react-id';\nimport * as PopperPrimitive from '@radix-ui/react-popper';\nimport { createPopperScope } from '@radix-ui/react-popper';\nimport { Portal as PortalPrimitive } from '@radix-ui/react-portal';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { createSlot } from '@radix-ui/react-slot';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { hideOthers } from 'aria-hidden';\nimport { RemoveScroll } from 'react-remove-scroll';\n\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Popover\n * -----------------------------------------------------------------------------------------------*/\n\nconst POPOVER_NAME = 'Popover';\n\ntype ScopedProps<P> = P & { __scopePopover?: Scope };\nconst [createPopoverContext, createPopoverScope] = createContextScope(POPOVER_NAME, [\n  createPopperScope,\n]);\nconst usePopperScope = createPopperScope();\n\ntype PopoverContextValue = {\n  triggerRef: React.RefObject<HTMLButtonElement | null>;\n  contentId: string;\n  open: boolean;\n  onOpenChange(open: boolean): void;\n  onOpenToggle(): void;\n  hasCustomAnchor: boolean;\n  onCustomAnchorAdd(): void;\n  onCustomAnchorRemove(): void;\n  modal: boolean;\n};\n\nconst [PopoverProvider, usePopoverContext] =\n  createPopoverContext<PopoverContextValue>(POPOVER_NAME);\n\ninterface PopoverProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?: (open: boolean) => void;\n  modal?: boolean;\n}\n\nconst Popover: React.FC<PopoverProps> = (props: ScopedProps<PopoverProps>) => {\n  const {\n    __scopePopover,\n    children,\n    open: openProp,\n    defaultOpen,\n    onOpenChange,\n    modal = false,\n  } = props;\n  const popperScope = usePopperScope(__scopePopover);\n  const triggerRef = React.useRef<HTMLButtonElement>(null);\n  const [hasCustomAnchor, setHasCustomAnchor] = React.useState(false);\n  const [open, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen ?? false,\n    onChange: onOpenChange,\n    caller: POPOVER_NAME,\n  });\n\n  return (\n    <PopperPrimitive.Root {...popperScope}>\n      <PopoverProvider\n        scope={__scopePopover}\n        contentId={useId()}\n        triggerRef={triggerRef}\n        open={open}\n        onOpenChange={setOpen}\n        onOpenToggle={React.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen])}\n        hasCustomAnchor={hasCustomAnchor}\n        onCustomAnchorAdd={React.useCallback(() => setHasCustomAnchor(true), [])}\n        onCustomAnchorRemove={React.useCallback(() => setHasCustomAnchor(false), [])}\n        modal={modal}\n      >\n        {children}\n      </PopoverProvider>\n    </PopperPrimitive.Root>\n  );\n};\n\nPopover.displayName = POPOVER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopoverAnchor\n * -----------------------------------------------------------------------------------------------*/\n\nconst ANCHOR_NAME = 'PopoverAnchor';\n\ntype PopoverAnchorElement = React.ElementRef<typeof PopperPrimitive.Anchor>;\ntype PopperAnchorProps = React.ComponentPropsWithoutRef<typeof PopperPrimitive.Anchor>;\ninterface PopoverAnchorProps extends PopperAnchorProps {}\n\nconst PopoverAnchor = React.forwardRef<PopoverAnchorElement, PopoverAnchorProps>(\n  (props: ScopedProps<PopoverAnchorProps>, forwardedRef) => {\n    const { __scopePopover, ...anchorProps } = props;\n    const context = usePopoverContext(ANCHOR_NAME, __scopePopover);\n    const popperScope = usePopperScope(__scopePopover);\n    const { onCustomAnchorAdd, onCustomAnchorRemove } = context;\n\n    React.useEffect(() => {\n      onCustomAnchorAdd();\n      return () => onCustomAnchorRemove();\n    }, [onCustomAnchorAdd, onCustomAnchorRemove]);\n\n    return <PopperPrimitive.Anchor {...popperScope} {...anchorProps} ref={forwardedRef} />;\n  }\n);\n\nPopoverAnchor.displayName = ANCHOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopoverTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'PopoverTrigger';\n\ntype PopoverTriggerElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = React.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface PopoverTriggerProps extends PrimitiveButtonProps {}\n\nconst PopoverTrigger = React.forwardRef<PopoverTriggerElement, PopoverTriggerProps>(\n  (props: ScopedProps<PopoverTriggerProps>, forwardedRef) => {\n    const { __scopePopover, ...triggerProps } = props;\n    const context = usePopoverContext(TRIGGER_NAME, __scopePopover);\n    const popperScope = usePopperScope(__scopePopover);\n    const composedTriggerRef = useComposedRefs(forwardedRef, context.triggerRef);\n\n    const trigger = (\n      <Primitive.button\n        type=\"button\"\n        aria-haspopup=\"dialog\"\n        aria-expanded={context.open}\n        aria-controls={context.contentId}\n        data-state={getState(context.open)}\n        {...triggerProps}\n        ref={composedTriggerRef}\n        onClick={composeEventHandlers(props.onClick, context.onOpenToggle)}\n      />\n    );\n\n    return context.hasCustomAnchor ? (\n      trigger\n    ) : (\n      <PopperPrimitive.Anchor asChild {...popperScope}>\n        {trigger}\n      </PopperPrimitive.Anchor>\n    );\n  }\n);\n\nPopoverTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopoverPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'PopoverPortal';\n\ntype PortalContextValue = { forceMount?: true };\nconst [PortalProvider, usePortalContext] = createPopoverContext<PortalContextValue>(PORTAL_NAME, {\n  forceMount: undefined,\n});\n\ntype PortalProps = React.ComponentPropsWithoutRef<typeof PortalPrimitive>;\ninterface PopoverPortalProps {\n  children?: React.ReactNode;\n  /**\n   * Specify a container element to portal the content into.\n   */\n  container?: PortalProps['container'];\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst PopoverPortal: React.FC<PopoverPortalProps> = (props: ScopedProps<PopoverPortalProps>) => {\n  const { __scopePopover, forceMount, children, container } = props;\n  const context = usePopoverContext(PORTAL_NAME, __scopePopover);\n  return (\n    <PortalProvider scope={__scopePopover} forceMount={forceMount}>\n      <Presence present={forceMount || context.open}>\n        <PortalPrimitive asChild container={container}>\n          {children}\n        </PortalPrimitive>\n      </Presence>\n    </PortalProvider>\n  );\n};\n\nPopoverPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopoverContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'PopoverContent';\n\ninterface PopoverContentProps extends PopoverContentTypeProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst PopoverContent = React.forwardRef<PopoverContentTypeElement, PopoverContentProps>(\n  (props: ScopedProps<PopoverContentProps>, forwardedRef) => {\n    const portalContext = usePortalContext(CONTENT_NAME, props.__scopePopover);\n    const { forceMount = portalContext.forceMount, ...contentProps } = props;\n    const context = usePopoverContext(CONTENT_NAME, props.__scopePopover);\n    return (\n      <Presence present={forceMount || context.open}>\n        {context.modal ? (\n          <PopoverContentModal {...contentProps} ref={forwardedRef} />\n        ) : (\n          <PopoverContentNonModal {...contentProps} ref={forwardedRef} />\n        )}\n      </Presence>\n    );\n  }\n);\n\nPopoverContent.displayName = CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Slot = createSlot('PopoverContent.RemoveScroll');\n\ntype PopoverContentTypeElement = PopoverContentImplElement;\ninterface PopoverContentTypeProps\n  extends Omit<PopoverContentImplProps, 'trapFocus' | 'disableOutsidePointerEvents'> {}\n\nconst PopoverContentModal = React.forwardRef<PopoverContentTypeElement, PopoverContentTypeProps>(\n  (props: ScopedProps<PopoverContentTypeProps>, forwardedRef) => {\n    const context = usePopoverContext(CONTENT_NAME, props.__scopePopover);\n    const contentRef = React.useRef<HTMLDivElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, contentRef);\n    const isRightClickOutsideRef = React.useRef(false);\n\n    // aria-hide everything except the content (better supported equivalent to setting aria-modal)\n    React.useEffect(() => {\n      const content = contentRef.current;\n      if (content) return hideOthers(content);\n    }, []);\n\n    return (\n      <RemoveScroll as={Slot} allowPinchZoom>\n        <PopoverContentImpl\n          {...props}\n          ref={composedRefs}\n          // we make sure we're not trapping once it's been closed\n          // (closed !== unmounted when animating out)\n          trapFocus={context.open}\n          disableOutsidePointerEvents\n          onCloseAutoFocus={composeEventHandlers(props.onCloseAutoFocus, (event) => {\n            event.preventDefault();\n            if (!isRightClickOutsideRef.current) context.triggerRef.current?.focus();\n          })}\n          onPointerDownOutside={composeEventHandlers(\n            props.onPointerDownOutside,\n            (event) => {\n              const originalEvent = event.detail.originalEvent;\n              const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;\n              const isRightClick = originalEvent.button === 2 || ctrlLeftClick;\n\n              isRightClickOutsideRef.current = isRightClick;\n            },\n            { checkForDefaultPrevented: false }\n          )}\n          // When focus is trapped, a `focusout` event may still happen.\n          // We make sure we don't trigger our `onDismiss` in such case.\n          onFocusOutside={composeEventHandlers(\n            props.onFocusOutside,\n            (event) => event.preventDefault(),\n            { checkForDefaultPrevented: false }\n          )}\n        />\n      </RemoveScroll>\n    );\n  }\n);\n\nconst PopoverContentNonModal = React.forwardRef<PopoverContentTypeElement, PopoverContentTypeProps>(\n  (props: ScopedProps<PopoverContentTypeProps>, forwardedRef) => {\n    const context = usePopoverContext(CONTENT_NAME, props.__scopePopover);\n    const hasInteractedOutsideRef = React.useRef(false);\n    const hasPointerDownOutsideRef = React.useRef(false);\n\n    return (\n      <PopoverContentImpl\n        {...props}\n        ref={forwardedRef}\n        trapFocus={false}\n        disableOutsidePointerEvents={false}\n        onCloseAutoFocus={(event) => {\n          props.onCloseAutoFocus?.(event);\n\n          if (!event.defaultPrevented) {\n            if (!hasInteractedOutsideRef.current) context.triggerRef.current?.focus();\n            // Always prevent auto focus because we either focus manually or want user agent focus\n            event.preventDefault();\n          }\n\n          hasInteractedOutsideRef.current = false;\n          hasPointerDownOutsideRef.current = false;\n        }}\n        onInteractOutside={(event) => {\n          props.onInteractOutside?.(event);\n\n          if (!event.defaultPrevented) {\n            hasInteractedOutsideRef.current = true;\n            if (event.detail.originalEvent.type === 'pointerdown') {\n              hasPointerDownOutsideRef.current = true;\n            }\n          }\n\n          // Prevent dismissing when clicking the trigger.\n          // As the trigger is already setup to close, without doing so would\n          // cause it to close and immediately open.\n          const target = event.target as HTMLElement;\n          const targetIsTrigger = context.triggerRef.current?.contains(target);\n          if (targetIsTrigger) event.preventDefault();\n\n          // On Safari if the trigger is inside a container with tabIndex={0}, when clicked\n          // we will get the pointer down outside event on the trigger, but then a subsequent\n          // focus outside event on the container, we ignore any focus outside event when we've\n          // already had a pointer down outside event.\n          if (event.detail.originalEvent.type === 'focusin' && hasPointerDownOutsideRef.current) {\n            event.preventDefault();\n          }\n        }}\n      />\n    );\n  }\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype PopoverContentImplElement = React.ElementRef<typeof PopperPrimitive.Content>;\ntype FocusScopeProps = React.ComponentPropsWithoutRef<typeof FocusScope>;\ntype DismissableLayerProps = React.ComponentPropsWithoutRef<typeof DismissableLayer>;\ntype PopperContentProps = React.ComponentPropsWithoutRef<typeof PopperPrimitive.Content>;\ninterface PopoverContentImplProps\n  extends Omit<PopperContentProps, 'onPlaced'>,\n    Omit<DismissableLayerProps, 'onDismiss'> {\n  /**\n   * Whether focus should be trapped within the `Popover`\n   * (default: false)\n   */\n  trapFocus?: FocusScopeProps['trapped'];\n\n  /**\n   * Event handler called when auto-focusing on open.\n   * Can be prevented.\n   */\n  onOpenAutoFocus?: FocusScopeProps['onMountAutoFocus'];\n\n  /**\n   * Event handler called when auto-focusing on close.\n   * Can be prevented.\n   */\n  onCloseAutoFocus?: FocusScopeProps['onUnmountAutoFocus'];\n}\n\nconst PopoverContentImpl = React.forwardRef<PopoverContentImplElement, PopoverContentImplProps>(\n  (props: ScopedProps<PopoverContentImplProps>, forwardedRef) => {\n    const {\n      __scopePopover,\n      trapFocus,\n      onOpenAutoFocus,\n      onCloseAutoFocus,\n      disableOutsidePointerEvents,\n      onEscapeKeyDown,\n      onPointerDownOutside,\n      onFocusOutside,\n      onInteractOutside,\n      ...contentProps\n    } = props;\n    const context = usePopoverContext(CONTENT_NAME, __scopePopover);\n    const popperScope = usePopperScope(__scopePopover);\n\n    // Make sure the whole tree has focus guards as our `Popover` may be\n    // the last element in the DOM (because of the `Portal`)\n    useFocusGuards();\n\n    return (\n      <FocusScope\n        asChild\n        loop\n        trapped={trapFocus}\n        onMountAutoFocus={onOpenAutoFocus}\n        onUnmountAutoFocus={onCloseAutoFocus}\n      >\n        <DismissableLayer\n          asChild\n          disableOutsidePointerEvents={disableOutsidePointerEvents}\n          onInteractOutside={onInteractOutside}\n          onEscapeKeyDown={onEscapeKeyDown}\n          onPointerDownOutside={onPointerDownOutside}\n          onFocusOutside={onFocusOutside}\n          onDismiss={() => context.onOpenChange(false)}\n        >\n          <PopperPrimitive.Content\n            data-state={getState(context.open)}\n            role=\"dialog\"\n            id={context.contentId}\n            {...popperScope}\n            {...contentProps}\n            ref={forwardedRef}\n            style={{\n              ...contentProps.style,\n              // re-namespace exposed content custom properties\n              ...{\n                '--radix-popover-content-transform-origin': 'var(--radix-popper-transform-origin)',\n                '--radix-popover-content-available-width': 'var(--radix-popper-available-width)',\n                '--radix-popover-content-available-height': 'var(--radix-popper-available-height)',\n                '--radix-popover-trigger-width': 'var(--radix-popper-anchor-width)',\n                '--radix-popover-trigger-height': 'var(--radix-popper-anchor-height)',\n              },\n            }}\n          />\n        </DismissableLayer>\n      </FocusScope>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * PopoverClose\n * -----------------------------------------------------------------------------------------------*/\n\nconst CLOSE_NAME = 'PopoverClose';\n\ntype PopoverCloseElement = React.ElementRef<typeof Primitive.button>;\ninterface PopoverCloseProps extends PrimitiveButtonProps {}\n\nconst PopoverClose = React.forwardRef<PopoverCloseElement, PopoverCloseProps>(\n  (props: ScopedProps<PopoverCloseProps>, forwardedRef) => {\n    const { __scopePopover, ...closeProps } = props;\n    const context = usePopoverContext(CLOSE_NAME, __scopePopover);\n    return (\n      <Primitive.button\n        type=\"button\"\n        {...closeProps}\n        ref={forwardedRef}\n        onClick={composeEventHandlers(props.onClick, () => context.onOpenChange(false))}\n      />\n    );\n  }\n);\n\nPopoverClose.displayName = CLOSE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopoverArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'PopoverArrow';\n\ntype PopoverArrowElement = React.ElementRef<typeof PopperPrimitive.Arrow>;\ntype PopperArrowProps = React.ComponentPropsWithoutRef<typeof PopperPrimitive.Arrow>;\ninterface PopoverArrowProps extends PopperArrowProps {}\n\nconst PopoverArrow = React.forwardRef<PopoverArrowElement, PopoverArrowProps>(\n  (props: ScopedProps<PopoverArrowProps>, forwardedRef) => {\n    const { __scopePopover, ...arrowProps } = props;\n    const popperScope = usePopperScope(__scopePopover);\n    return <PopperPrimitive.Arrow {...popperScope} {...arrowProps} ref={forwardedRef} />;\n  }\n);\n\nPopoverArrow.displayName = ARROW_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getState(open: boolean) {\n  return open ? 'open' : 'closed';\n}\n\nconst Root = Popover;\nconst Anchor = PopoverAnchor;\nconst Trigger = PopoverTrigger;\nconst Portal = PopoverPortal;\nconst Content = PopoverContent;\nconst Close = PopoverClose;\nconst Arrow = PopoverArrow;\n\nexport {\n  createPopoverScope,\n  //\n  Popover,\n  PopoverAnchor,\n  PopoverTrigger,\n  PopoverPortal,\n  PopoverContent,\n  PopoverClose,\n  PopoverArrow,\n  //\n  Root,\n  Anchor,\n  Trigger,\n  Portal,\n  Content,\n  Close,\n  Arrow,\n};\nexport type {\n  PopoverProps,\n  PopoverAnchorProps,\n  PopoverTriggerProps,\n  PopoverPortalProps,\n  PopoverContentProps,\n  PopoverCloseProps,\n  PopoverArrowProps,\n};\n"],"mappings":";;;;;;;;;;;AAAA,YAAYA,KAAA,MAAW;AACvB,SAASC,oBAAA,QAA4B;AACrC,SAASC,eAAA,QAAuB;AAChC,SAASC,kBAAA,QAA0B;AACnC,SAASC,gBAAA,QAAwB;AACjC,SAASC,cAAA,QAAsB;AAC/B,SAASC,UAAA,QAAkB;AAC3B,SAASC,KAAA,QAAa;AACtB,YAAYC,eAAA,MAAqB;AACjC,SAASC,iBAAA,QAAyB;AAClC,SAASC,MAAA,IAAUC,eAAA,QAAuB;AAC1C,SAASC,QAAA,QAAgB;AACzB,SAASC,SAAA,QAAiB;AAC1B,SAASC,UAAA,QAAkB;AAC3B,SAASC,oBAAA,QAA4B;AACrC,SAASC,UAAA,QAAkB;AAC3B,SAASC,YAAA,QAAoB;AA4DvB,SAAAC,GAAA;AApDN,IAAMC,YAAA,GAAe;AAGrB,IAAM,CAACC,oBAAA,EAAsBC,kBAAkB,IAAIlB,kBAAA,CAAmBgB,YAAA,EAAc,CAClFV,iBAAA,CACD;AACD,IAAMa,cAAA,GAAiBb,iBAAA,CAAkB;AAczC,IAAM,CAACc,eAAA,EAAiBC,iBAAiB,IACvCJ,oBAAA,CAA0CD,YAAY;AAUxD,IAAMM,OAAA,GAAmCC,KAAA,IAAqC;EAC5E,MAAM;IACJC,cAAA;IACAC,QAAA;IACAC,IAAA,EAAMC,QAAA;IACNC,WAAA;IACAC,YAAA;IACAC,KAAA,GAAQ;EACV,IAAIP,KAAA;EACJ,MAAMQ,WAAA,GAAcZ,cAAA,CAAeK,cAAc;EACjD,MAAMQ,UAAA,GAAmBnC,KAAA,CAAAoC,MAAA,CAA0B,IAAI;EACvD,MAAM,CAACC,eAAA,EAAiBC,kBAAkB,IAAUtC,KAAA,CAAAuC,QAAA,CAAS,KAAK;EAClE,MAAM,CAACV,IAAA,EAAMW,OAAO,IAAIzB,oBAAA,CAAqB;IAC3C0B,IAAA,EAAMX,QAAA;IACNY,WAAA,EAAaX,WAAA,aAAAA,WAAA,cAAAA,WAAA,GAAe;IAC5BY,QAAA,EAAUX,YAAA;IACVY,MAAA,EAAQzB;EACV,CAAC;EAED,OACE,eAAAD,GAAA,CAAiBV,eAAA,CAAAqC,IAAA,EAAAC,aAAA,CAAAA,aAAA,KAASZ,WAAA;IACxBN,QAAA,iBAAAV,GAAA,CAACK,eAAA;MACCwB,KAAA,EAAOpB,cAAA;MACPqB,SAAA,EAAWzC,KAAA,CAAM;MACjB4B,UAAA;MACAN,IAAA;MACAG,YAAA,EAAcQ,OAAA;MACdS,YAAA,EAAoBjD,KAAA,CAAAkD,WAAA,CAAY,MAAMV,OAAA,CAASW,QAAA,IAAa,CAACA,QAAQ,GAAG,CAACX,OAAO,CAAC;MACjFH,eAAA;MACAe,iBAAA,EAAyBpD,KAAA,CAAAkD,WAAA,CAAY,MAAMZ,kBAAA,CAAmB,IAAI,GAAG,EAAE;MACvEe,oBAAA,EAA4BrD,KAAA,CAAAkD,WAAA,CAAY,MAAMZ,kBAAA,CAAmB,KAAK,GAAG,EAAE;MAC3EL,KAAA;MAECL;IAAA,CACH;EAAA,EACF;AAEJ;AAEAH,OAAA,CAAQ6B,WAAA,GAAcnC,YAAA;AAMtB,IAAMoC,WAAA,GAAc;AAMpB,IAAMC,aAAA,GAAsBxD,KAAA,CAAAyD,UAAA,CAC1B,CAAC/B,KAAA,EAAwCgC,YAAA,KAAiB;EACxD,MAAM;MAAE/B;IAA+B,IAAID,KAAA;IAAhBiC,WAAA,GAAAC,wBAAA,CAAgBlC,KAAA,EAAAmC,SAAA;EAC3C,MAAMC,OAAA,GAAUtC,iBAAA,CAAkB+B,WAAA,EAAa5B,cAAc;EAC7D,MAAMO,WAAA,GAAcZ,cAAA,CAAeK,cAAc;EACjD,MAAM;IAAEyB,iBAAA;IAAmBC;EAAqB,IAAIS,OAAA;EAE9C9D,KAAA,CAAA+D,SAAA,CAAU,MAAM;IACpBX,iBAAA,CAAkB;IAClB,OAAO,MAAMC,oBAAA,CAAqB;EACpC,GAAG,CAACD,iBAAA,EAAmBC,oBAAoB,CAAC;EAE5C,OAAO,eAAAnC,GAAA,CAAiBV,eAAA,CAAAwD,MAAA,EAAAlB,aAAA,CAAAA,aAAA,CAAAA,aAAA,KAAWZ,WAAA,GAAiByB,WAAA;IAAaM,GAAA,EAAKP;EAAA,EAAc;AACtF,CACF;AAEAF,aAAA,CAAcF,WAAA,GAAcC,WAAA;AAM5B,IAAMW,YAAA,GAAe;AAMrB,IAAMC,cAAA,GAAuBnE,KAAA,CAAAyD,UAAA,CAC3B,CAAC/B,KAAA,EAAyCgC,YAAA,KAAiB;EACzD,MAAM;MAAE/B;IAAgC,IAAID,KAAA;IAAjB0C,YAAA,GAAAR,wBAAA,CAAiBlC,KAAA,EAAA2C,UAAA;EAC5C,MAAMP,OAAA,GAAUtC,iBAAA,CAAkB0C,YAAA,EAAcvC,cAAc;EAC9D,MAAMO,WAAA,GAAcZ,cAAA,CAAeK,cAAc;EACjD,MAAM2C,kBAAA,GAAqBpE,eAAA,CAAgBwD,YAAA,EAAcI,OAAA,CAAQ3B,UAAU;EAE3E,MAAMoC,OAAA,GACJ,eAAArD,GAAA,CAACL,SAAA,CAAU2D,MAAA,EAAA1B,aAAA,CAAAA,aAAA;IACT2B,IAAA,EAAK;IACL,iBAAc;IACd,iBAAeX,OAAA,CAAQjC,IAAA;IACvB,iBAAeiC,OAAA,CAAQd,SAAA;IACvB,cAAY0B,QAAA,CAASZ,OAAA,CAAQjC,IAAI;EAAA,GAC7BuC,YAAA;IACJH,GAAA,EAAKK,kBAAA;IACLK,OAAA,EAAS1E,oBAAA,CAAqByB,KAAA,CAAMiD,OAAA,EAASb,OAAA,CAAQb,YAAY;EAAA,EACnE;EAGF,OAAOa,OAAA,CAAQzB,eAAA,GACbkC,OAAA,GAEA,eAAArD,GAAA,CAAiBV,eAAA,CAAAwD,MAAA,EAAAlB,aAAA,CAAAA,aAAA;IAAO8B,OAAA,EAAO;EAAA,GAAK1C,WAAA;IACjCN,QAAA,EAAA2C;EAAA,EACH;AAEJ,CACF;AAEAJ,cAAA,CAAeb,WAAA,GAAcY,YAAA;AAM7B,IAAMW,WAAA,GAAc;AAGpB,IAAM,CAACC,cAAA,EAAgBC,gBAAgB,IAAI3D,oBAAA,CAAyCyD,WAAA,EAAa;EAC/FG,UAAA,EAAY;AACd,CAAC;AAgBD,IAAMC,aAAA,GAA+CvD,KAAA,IAA2C;EAC9F,MAAM;IAAEC,cAAA;IAAgBqD,UAAA;IAAYpD,QAAA;IAAUsD;EAAU,IAAIxD,KAAA;EAC5D,MAAMoC,OAAA,GAAUtC,iBAAA,CAAkBqD,WAAA,EAAalD,cAAc;EAC7D,OACE,eAAAT,GAAA,CAAC4D,cAAA;IAAe/B,KAAA,EAAOpB,cAAA;IAAgBqD,UAAA;IACrCpD,QAAA,iBAAAV,GAAA,CAACN,QAAA;MAASuE,OAAA,EAASH,UAAA,IAAclB,OAAA,CAAQjC,IAAA;MACvCD,QAAA,iBAAAV,GAAA,CAACP,eAAA;QAAgBiE,OAAA,EAAO;QAACM,SAAA;QACtBtD;MAAA,CACH;IAAA,CACF;EAAA,CACF;AAEJ;AAEAqD,aAAA,CAAc3B,WAAA,GAAcuB,WAAA;AAM5B,IAAMO,YAAA,GAAe;AAUrB,IAAMC,cAAA,GAAuBrF,KAAA,CAAAyD,UAAA,CAC3B,CAAC/B,KAAA,EAAyCgC,YAAA,KAAiB;EACzD,MAAM4B,aAAA,GAAgBP,gBAAA,CAAiBK,YAAA,EAAc1D,KAAA,CAAMC,cAAc;EACzE,MAAM;MAAEqD,UAAA,GAAaM,aAAA,CAAcN;IAA4B,IAAItD,KAAA;IAAjB6D,YAAA,GAAA3B,wBAAA,CAAiBlC,KAAA,EAAA8D,UAAA;EACnE,MAAM1B,OAAA,GAAUtC,iBAAA,CAAkB4D,YAAA,EAAc1D,KAAA,CAAMC,cAAc;EACpE,OACE,eAAAT,GAAA,CAACN,QAAA;IAASuE,OAAA,EAASH,UAAA,IAAclB,OAAA,CAAQjC,IAAA;IACtCD,QAAA,EAAAkC,OAAA,CAAQ7B,KAAA,GACP,eAAAf,GAAA,CAACuE,mBAAA,EAAA3C,aAAA,CAAAA,aAAA,KAAwByC,YAAA;MAActB,GAAA,EAAKP;IAAA,EAAc,IAE1D,eAAAxC,GAAA,CAACwE,sBAAA,EAAA5C,aAAA,CAAAA,aAAA,KAA2ByC,YAAA;MAActB,GAAA,EAAKP;IAAA,EAAc;EAAA,CAEjE;AAEJ,CACF;AAEA2B,cAAA,CAAe/B,WAAA,GAAc8B,YAAA;AAI7B,IAAMO,IAAA,GAAO7E,UAAA,CAAW,6BAA6B;AAMrD,IAAM2E,mBAAA,GAA4BzF,KAAA,CAAAyD,UAAA,CAChC,CAAC/B,KAAA,EAA6CgC,YAAA,KAAiB;EAC7D,MAAMI,OAAA,GAAUtC,iBAAA,CAAkB4D,YAAA,EAAc1D,KAAA,CAAMC,cAAc;EACpE,MAAMiE,UAAA,GAAmB5F,KAAA,CAAAoC,MAAA,CAAuB,IAAI;EACpD,MAAMyD,YAAA,GAAe3F,eAAA,CAAgBwD,YAAA,EAAckC,UAAU;EAC7D,MAAME,sBAAA,GAA+B9F,KAAA,CAAAoC,MAAA,CAAO,KAAK;EAG3CpC,KAAA,CAAA+D,SAAA,CAAU,MAAM;IACpB,MAAMgC,OAAA,GAAUH,UAAA,CAAWI,OAAA;IAC3B,IAAID,OAAA,EAAS,OAAO/E,UAAA,CAAW+E,OAAO;EACxC,GAAG,EAAE;EAEL,OACE,eAAA7E,GAAA,CAACD,YAAA;IAAagF,EAAA,EAAIN,IAAA;IAAMO,cAAA,EAAc;IACpCtE,QAAA,iBAAAV,GAAA,CAACiF,kBAAA,EAAArD,aAAA,CAAAA,aAAA,KACKpB,KAAA;MACJuC,GAAA,EAAK4B,YAAA;MAGLO,SAAA,EAAWtC,OAAA,CAAQjC,IAAA;MACnBwE,2BAAA,EAA2B;MAC3BC,gBAAA,EAAkBrG,oBAAA,CAAqByB,KAAA,CAAM4E,gBAAA,EAAmBC,KAAA,IAAU;QAAA,IAAAC,qBAAA;QACxED,KAAA,CAAME,cAAA,CAAe;QACrB,IAAI,CAACX,sBAAA,CAAuBE,OAAA,EAAS,CAAAQ,qBAAA,GAAA1C,OAAA,CAAQ3B,UAAA,CAAW6D,OAAA,cAAAQ,qBAAA,eAAnBA,qBAAA,CAA4BE,KAAA,CAAM;MACzE,CAAC;MACDC,oBAAA,EAAsB1G,oBAAA,CACpByB,KAAA,CAAMiF,oBAAA,EACLJ,KAAA,IAAU;QACT,MAAMK,aAAA,GAAgBL,KAAA,CAAMM,MAAA,CAAOD,aAAA;QACnC,MAAME,aAAA,GAAgBF,aAAA,CAAcpC,MAAA,KAAW,KAAKoC,aAAA,CAAcG,OAAA,KAAY;QAC9E,MAAMC,YAAA,GAAeJ,aAAA,CAAcpC,MAAA,KAAW,KAAKsC,aAAA;QAEnDhB,sBAAA,CAAuBE,OAAA,GAAUgB,YAAA;MACnC,GACA;QAAEC,wBAAA,EAA0B;MAAM,CACpC;MAGAC,cAAA,EAAgBjH,oBAAA,CACdyB,KAAA,CAAMwF,cAAA,EACLX,KAAA,IAAUA,KAAA,CAAME,cAAA,CAAe,GAChC;QAAEQ,wBAAA,EAA0B;MAAM,CACpC;IAAA,EACF;EAAA,CACF;AAEJ,CACF;AAEA,IAAMvB,sBAAA,GAA+B1F,KAAA,CAAAyD,UAAA,CACnC,CAAC/B,KAAA,EAA6CgC,YAAA,KAAiB;EAC7D,MAAMI,OAAA,GAAUtC,iBAAA,CAAkB4D,YAAA,EAAc1D,KAAA,CAAMC,cAAc;EACpE,MAAMwF,uBAAA,GAAgCnH,KAAA,CAAAoC,MAAA,CAAO,KAAK;EAClD,MAAMgF,wBAAA,GAAiCpH,KAAA,CAAAoC,MAAA,CAAO,KAAK;EAEnD,OACE,eAAAlB,GAAA,CAACiF,kBAAA,EAAArD,aAAA,CAAAA,aAAA,KACKpB,KAAA;IACJuC,GAAA,EAAKP,YAAA;IACL0C,SAAA,EAAW;IACXC,2BAAA,EAA6B;IAC7BC,gBAAA,EAAmBC,KAAA,IAAU;MAAA,IAAAc,qBAAA;MAC3B,CAAAA,qBAAA,GAAA3F,KAAA,CAAM4E,gBAAA,cAAAe,qBAAA,eAANA,qBAAA,CAAAC,IAAA,CAAA5F,KAAA,EAAyB6E,KAAK;MAE9B,IAAI,CAACA,KAAA,CAAMgB,gBAAA,EAAkB;QAAA,IAAAC,sBAAA;QAC3B,IAAI,CAACL,uBAAA,CAAwBnB,OAAA,EAAS,CAAAwB,sBAAA,GAAA1D,OAAA,CAAQ3B,UAAA,CAAW6D,OAAA,cAAAwB,sBAAA,eAAnBA,sBAAA,CAA4Bd,KAAA,CAAM;QAExEH,KAAA,CAAME,cAAA,CAAe;MACvB;MAEAU,uBAAA,CAAwBnB,OAAA,GAAU;MAClCoB,wBAAA,CAAyBpB,OAAA,GAAU;IACrC;IACAyB,iBAAA,EAAoBlB,KAAA,IAAU;MAAA,IAAAmB,qBAAA,EAAAC,sBAAA;MAC5B,CAAAD,qBAAA,GAAAhG,KAAA,CAAM+F,iBAAA,cAAAC,qBAAA,eAANA,qBAAA,CAAAJ,IAAA,CAAA5F,KAAA,EAA0B6E,KAAK;MAE/B,IAAI,CAACA,KAAA,CAAMgB,gBAAA,EAAkB;QAC3BJ,uBAAA,CAAwBnB,OAAA,GAAU;QAClC,IAAIO,KAAA,CAAMM,MAAA,CAAOD,aAAA,CAAcnC,IAAA,KAAS,eAAe;UACrD2C,wBAAA,CAAyBpB,OAAA,GAAU;QACrC;MACF;MAKA,MAAM4B,MAAA,GAASrB,KAAA,CAAMqB,MAAA;MACrB,MAAMC,eAAA,IAAAF,sBAAA,GAAkB7D,OAAA,CAAQ3B,UAAA,CAAW6D,OAAA,cAAA2B,sBAAA,uBAAnBA,sBAAA,CAA4BG,QAAA,CAASF,MAAM;MACnE,IAAIC,eAAA,EAAiBtB,KAAA,CAAME,cAAA,CAAe;MAM1C,IAAIF,KAAA,CAAMM,MAAA,CAAOD,aAAA,CAAcnC,IAAA,KAAS,aAAa2C,wBAAA,CAAyBpB,OAAA,EAAS;QACrFO,KAAA,CAAME,cAAA,CAAe;MACvB;IACF;EAAA,EACF;AAEJ,CACF;AA8BA,IAAMN,kBAAA,GAA2BnG,KAAA,CAAAyD,UAAA,CAC/B,CAAC/B,KAAA,EAA6CgC,YAAA,KAAiB;EAC7D,MAAM;MACJ/B,cAAA;MACAyE,SAAA;MACA2B,eAAA;MACAzB,gBAAA;MACAD,2BAAA;MACA2B,eAAA;MACArB,oBAAA;MACAO,cAAA;MACAO;IAEF,IAAI/F,KAAA;IADC6D,YAAA,GAAA3B,wBAAA,CACDlC,KAAA,EAAAuG,UAAA;EACJ,MAAMnE,OAAA,GAAUtC,iBAAA,CAAkB4D,YAAA,EAAczD,cAAc;EAC9D,MAAMO,WAAA,GAAcZ,cAAA,CAAeK,cAAc;EAIjDtB,cAAA,CAAe;EAEf,OACE,eAAAa,GAAA,CAACZ,UAAA;IACCsE,OAAA,EAAO;IACPsD,IAAA,EAAI;IACJC,OAAA,EAAS/B,SAAA;IACTgC,gBAAA,EAAkBL,eAAA;IAClBM,kBAAA,EAAoB/B,gBAAA;IAEpB1E,QAAA,iBAAAV,GAAA,CAACd,gBAAA;MACCwE,OAAA,EAAO;MACPyB,2BAAA;MACAoB,iBAAA;MACAO,eAAA;MACArB,oBAAA;MACAO,cAAA;MACAoB,SAAA,EAAWA,CAAA,KAAMxE,OAAA,CAAQ9B,YAAA,CAAa,KAAK;MAE3CJ,QAAA,iBAAAV,GAAA,CAAiBV,eAAA,CAAA+H,OAAA,EAAAzF,aAAA,CAAAA,aAAA,CAAAA,aAAA;QACf,cAAY4B,QAAA,CAASZ,OAAA,CAAQjC,IAAI;QACjC2G,IAAA,EAAK;QACLC,EAAA,EAAI3E,OAAA,CAAQd;MAAA,GACRd,WAAA,GACAqD,YAAA;QACJtB,GAAA,EAAKP,YAAA;QACLgF,KAAA,EAAA5F,aAAA,CAAAA,aAAA,KACKyC,YAAA,CAAamD,KAAA,GAEb;UACD,4CAA4C;UAC5C,2CAA2C;UAC3C,4CAA4C;UAC5C,iCAAiC;UACjC,kCAAkC;QACpC;MACF,EACF;IAAA,CACF;EAAA,CACF;AAEJ,CACF;AAMA,IAAMC,UAAA,GAAa;AAKnB,IAAMC,YAAA,GAAqB5I,KAAA,CAAAyD,UAAA,CACzB,CAAC/B,KAAA,EAAuCgC,YAAA,KAAiB;EACvD,MAAM;MAAE/B;IAA8B,IAAID,KAAA;IAAfmH,UAAA,GAAAjF,wBAAA,CAAelC,KAAA,EAAAoH,UAAA;EAC1C,MAAMhF,OAAA,GAAUtC,iBAAA,CAAkBmH,UAAA,EAAYhH,cAAc;EAC5D,OACE,eAAAT,GAAA,CAACL,SAAA,CAAU2D,MAAA,EAAA1B,aAAA,CAAAA,aAAA;IACT2B,IAAA,EAAK;EAAA,GACDoE,UAAA;IACJ5E,GAAA,EAAKP,YAAA;IACLiB,OAAA,EAAS1E,oBAAA,CAAqByB,KAAA,CAAMiD,OAAA,EAAS,MAAMb,OAAA,CAAQ9B,YAAA,CAAa,KAAK,CAAC;EAAA,EAChF;AAEJ,CACF;AAEA4G,YAAA,CAAatF,WAAA,GAAcqF,UAAA;AAM3B,IAAMI,UAAA,GAAa;AAMnB,IAAMC,YAAA,GAAqBhJ,KAAA,CAAAyD,UAAA,CACzB,CAAC/B,KAAA,EAAuCgC,YAAA,KAAiB;EACvD,MAAM;MAAE/B;IAA8B,IAAID,KAAA;IAAfuH,UAAA,GAAArF,wBAAA,CAAelC,KAAA,EAAAwH,UAAA;EAC1C,MAAMhH,WAAA,GAAcZ,cAAA,CAAeK,cAAc;EACjD,OAAO,eAAAT,GAAA,CAAiBV,eAAA,CAAA2I,KAAA,EAAArG,aAAA,CAAAA,aAAA,CAAAA,aAAA,KAAUZ,WAAA,GAAiB+G,UAAA;IAAYhF,GAAA,EAAKP;EAAA,EAAc;AACpF,CACF;AAEAsF,YAAA,CAAa1F,WAAA,GAAcyF,UAAA;AAI3B,SAASrE,SAAS7C,IAAA,EAAe;EAC/B,OAAOA,IAAA,GAAO,SAAS;AACzB;AAEA,IAAMuH,KAAA,GAAO3H,OAAA;AACb,IAAM4H,OAAA,GAAS7F,aAAA;AACf,IAAM8F,OAAA,GAAUnF,cAAA;AAChB,IAAMzD,MAAA,GAASuE,aAAA;AACf,IAAMsE,QAAA,GAAUlE,cAAA;AAChB,IAAMmE,KAAA,GAAQZ,YAAA;AACd,IAAMa,MAAA,GAAQT,YAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}