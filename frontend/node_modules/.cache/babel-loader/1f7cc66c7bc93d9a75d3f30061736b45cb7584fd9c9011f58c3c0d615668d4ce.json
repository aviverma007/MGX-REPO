{"ast":null,"code":"var _jsxFileName = \"D:\\\\SMARTDESK APPLICATION FILES\\\\EMPLOYEE_DIR_BETA1\\\\frontend\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Auto-initialize authentication state from localStorage\n  useEffect(() => {\n    initializeAuth();\n  }, []);\n  const login = userData => {\n    setUser(userData);\n    setIsAuthenticated(true);\n    localStorage.setItem('user', JSON.stringify(userData));\n  };\n  const logout = () => {\n    setUser(null);\n    setIsAuthenticated(false);\n    localStorage.removeItem('user');\n  };\n  const initializeAuth = () => {\n    const savedUser = localStorage.getItem('user');\n    if (savedUser) {\n      const userData = JSON.parse(savedUser);\n      setUser(userData);\n      setIsAuthenticated(true);\n    }\n  };\n  const isAdmin = () => {\n    return (user === null || user === void 0 ? void 0 : user.role) === 'admin';\n  };\n  const isUser = () => {\n    return (user === null || user === void 0 ? void 0 : user.role) === 'user';\n  };\n  const value = {\n    user,\n    isAuthenticated,\n    login,\n    logout,\n    initializeAuth,\n    isAdmin,\n    isUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"Uq7KcTiOseX3k63CKoUNgtSkdNA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","isAuthenticated","setIsAuthenticated","initializeAuth","login","userData","localStorage","setItem","JSON","stringify","logout","removeItem","savedUser","getItem","parse","isAdmin","role","isUser","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/SMARTDESK APPLICATION FILES/EMPLOYEE_DIR_BETA1/frontend/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  // Auto-initialize authentication state from localStorage\r\n  useEffect(() => {\r\n    initializeAuth();\r\n  }, []);\r\n\r\n  const login = (userData) => {\r\n    setUser(userData);\r\n    setIsAuthenticated(true);\r\n    localStorage.setItem('user', JSON.stringify(userData));\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n    localStorage.removeItem('user');\r\n  };\r\n\r\n  const initializeAuth = () => {\r\n    const savedUser = localStorage.getItem('user');\r\n    if (savedUser) {\r\n      const userData = JSON.parse(savedUser);\r\n      setUser(userData);\r\n      setIsAuthenticated(true);\r\n    }\r\n  };\r\n\r\n  const isAdmin = () => {\r\n    return user?.role === 'admin';\r\n  };\r\n\r\n  const isUser = () => {\r\n    return user?.role === 'user';\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    isAuthenticated,\r\n    login,\r\n    logout,\r\n    initializeAuth,\r\n    isAdmin,\r\n    isUser\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGR,UAAU,CAACK,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAQpB,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACc,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;;EAE7D;EACAC,SAAS,CAAC,MAAM;IACde,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,KAAK,GAAIC,QAAQ,IAAK;IAC1BL,OAAO,CAACK,QAAQ,CAAC;IACjBH,kBAAkB,CAAC,IAAI,CAAC;IACxBI,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACJ,QAAQ,CAAC,CAAC;EACxD,CAAC;EAED,MAAMK,MAAM,GAAGA,CAAA,KAAM;IACnBV,OAAO,CAAC,IAAI,CAAC;IACbE,kBAAkB,CAAC,KAAK,CAAC;IACzBI,YAAY,CAACK,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC;EAED,MAAMR,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMS,SAAS,GAAGN,YAAY,CAACO,OAAO,CAAC,MAAM,CAAC;IAC9C,IAAID,SAAS,EAAE;MACb,MAAMP,QAAQ,GAAGG,IAAI,CAACM,KAAK,CAACF,SAAS,CAAC;MACtCZ,OAAO,CAACK,QAAQ,CAAC;MACjBH,kBAAkB,CAAC,IAAI,CAAC;IAC1B;EACF,CAAC;EAED,MAAMa,OAAO,GAAGA,CAAA,KAAM;IACpB,OAAO,CAAAhB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEiB,IAAI,MAAK,OAAO;EAC/B,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnB,OAAO,CAAAlB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEiB,IAAI,MAAK,MAAM;EAC9B,CAAC;EAED,MAAME,KAAK,GAAG;IACZnB,IAAI;IACJE,eAAe;IACfG,KAAK;IACLM,MAAM;IACNP,cAAc;IACdY,OAAO;IACPE;EACF,CAAC;EAED,oBAAO3B,OAAA,CAACC,WAAW,CAAC4B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAArB,QAAA,EAAEA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAC9E,CAAC;AAACzB,GAAA,CAjDWF,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}