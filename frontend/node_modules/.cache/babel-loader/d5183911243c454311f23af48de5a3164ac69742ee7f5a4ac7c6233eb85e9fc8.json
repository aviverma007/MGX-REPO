{"ast":null,"code":"import _objectSpread from\"D:/SMARTDESK APPLICATION FILES/EMPLOYEE_DIR_BETA1/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{Card,CardContent,CardHeader,CardTitle}from'./ui/card';import{Button}from'./ui/button';import{Badge}from'./ui/badge';import{Textarea}from'./ui/textarea';import{Input}from'./ui/input';import{PlusCircle,Calendar,User,Clock,CheckCircle,AlertCircle,Trash2,Edit3}from'lucide-react';import{toast}from'sonner';import{taskAPI,employeeAPI}from'../services/api';import SearchableEmployeeDropdown from'./ui/SearchableEmployeeDropdown';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Work=()=>{const[tasks,setTasks]=useState([]);const[employees,setEmployees]=useState([]);const[showAddForm,setShowAddForm]=useState(false);const[editingTask,setEditingTask]=useState(null);const[formData,setFormData]=useState({title:'',description:'',assigned_to:'',priority:'medium',status:'pending',due_date:''});const[loading,setLoading]=useState(true);const[filter,setFilter]=useState('all');useEffect(()=>{fetchTasks();fetchEmployees();},[]);const fetchTasks=async()=>{try{const data=await taskAPI.getAll();setTasks(data);}catch(error){console.error('Error fetching tasks:',error);toast.error('Failed to load tasks');}finally{setLoading(false);}};const fetchEmployees=async()=>{try{const data=await employeeAPI.getAll();setEmployees(data);}catch(error){console.error('Error fetching employees:',error);}};const handleSubmit=async e=>{e.preventDefault();try{if(editingTask){await taskAPI.update(editingTask.id,formData);toast.success('Task updated successfully');}else{await taskAPI.create(formData);toast.success('Task created successfully');}fetchTasks();resetForm();}catch(error){console.error('Error saving task:',error);toast.error('Failed to save task');}};const handleStatusChange=async(taskId,newStatus)=>{try{await taskAPI.update(taskId,{status:newStatus});toast.success('Task status updated');fetchTasks();}catch(error){console.error('Error updating task status:',error);toast.error('Failed to update task status');}};const handleDelete=async taskId=>{try{await taskAPI.delete(taskId);toast.success('Task deleted successfully');fetchTasks();}catch(error){console.error('Error deleting task:',error);toast.error('Failed to delete task');}};const resetForm=()=>{setFormData({title:'',description:'',assigned_to:'',priority:'medium',status:'pending',due_date:''});setShowAddForm(false);setEditingTask(null);};const handleEdit=task=>{setFormData(_objectSpread({},task));setEditingTask(task);setShowAddForm(true);};const filteredTasks=tasks.filter(task=>{if(filter==='all')return true;return task.status===filter;});const getStatusColor=status=>{switch(status){case'completed':return'bg-green-100 text-green-800';case'in_progress':return'bg-blue-100 text-blue-800';case'pending':return'bg-yellow-100 text-yellow-800';default:return'bg-gray-100 text-gray-800';}};const getPriorityColor=priority=>{switch(priority){case'high':return'bg-red-100 text-red-800';case'medium':return'bg-orange-100 text-orange-800';case'low':return'bg-green-100 text-green-800';default:return'bg-gray-100 text-gray-800';}};const getAssignedEmployeeName=employeeId=>{const employee=employees.find(emp=>emp.id===employeeId);return employee?employee.name:'Unassigned';};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center min-h-screen\",children:/*#__PURE__*/_jsx(\"div\",{className:\"text-lg\",children:\"Loading tasks...\"})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"p-6 max-w-6xl mx-auto\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-6\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-bold text-gray-900\",children:\"Task Management\"}),/*#__PURE__*/_jsxs(Button,{onClick:()=>setShowAddForm(true),children:[/*#__PURE__*/_jsx(PlusCircle,{className:\"mr-2 h-4 w-4\"}),\"Add Task\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex space-x-2 mb-6\",children:[{key:'all',label:'All Tasks'},{key:'pending',label:'Pending'},{key:'in_progress',label:'In Progress'},{key:'completed',label:'Completed'}].map(tab=>/*#__PURE__*/_jsx(Button,{variant:filter===tab.key?\"default\":\"outline\",onClick:()=>setFilter(tab.key),children:tab.label},tab.key))}),showAddForm&&/*#__PURE__*/_jsxs(Card,{className:\"mb-6\",children:[/*#__PURE__*/_jsx(CardHeader,{children:/*#__PURE__*/_jsx(CardTitle,{children:editingTask?'Edit Task':'Create New Task'})}),/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium mb-1\",children:\"Title\"}),/*#__PURE__*/_jsx(Input,{value:formData.title,onChange:e=>setFormData(_objectSpread(_objectSpread({},formData),{},{title:e.target.value})),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium mb-1\",children:\"Assign To\"}),/*#__PURE__*/_jsx(SearchableEmployeeDropdown,{employees:employees,selectedEmployeeId:formData.assigned_to,onEmployeeSelect:employeeId=>setFormData(_objectSpread(_objectSpread({},formData),{},{assigned_to:employeeId})),placeholder:\"Search by employee name or ID...\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium mb-1\",children:\"Priority\"}),/*#__PURE__*/_jsxs(\"select\",{value:formData.priority,onChange:e=>setFormData(_objectSpread(_objectSpread({},formData),{},{priority:e.target.value})),className:\"w-full p-2 border rounded-md\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"low\",children:\"Low\"}),/*#__PURE__*/_jsx(\"option\",{value:\"medium\",children:\"Medium\"}),/*#__PURE__*/_jsx(\"option\",{value:\"high\",children:\"High\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium mb-1\",children:\"Status\"}),/*#__PURE__*/_jsxs(\"select\",{value:formData.status,onChange:e=>setFormData(_objectSpread(_objectSpread({},formData),{},{status:e.target.value})),className:\"w-full p-2 border rounded-md\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"pending\",children:\"Pending\"}),/*#__PURE__*/_jsx(\"option\",{value:\"in_progress\",children:\"In Progress\"}),/*#__PURE__*/_jsx(\"option\",{value:\"completed\",children:\"Completed\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium mb-1\",children:\"Due Date\"}),/*#__PURE__*/_jsx(Input,{type:\"date\",value:formData.due_date,onChange:e=>setFormData(_objectSpread(_objectSpread({},formData),{},{due_date:e.target.value}))})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium mb-1\",children:\"Description\"}),/*#__PURE__*/_jsx(Textarea,{value:formData.description,onChange:e=>setFormData(_objectSpread(_objectSpread({},formData),{},{description:e.target.value})),rows:3})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-2\",children:[/*#__PURE__*/_jsx(Button,{type:\"submit\",children:editingTask?'Update Task':'Create Task'}),/*#__PURE__*/_jsx(Button,{type:\"button\",variant:\"outline\",onClick:resetForm,children:\"Cancel\"})]})]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\",children:filteredTasks.map(task=>/*#__PURE__*/_jsxs(Card,{className:\"hover:shadow-md transition-shadow\",children:[/*#__PURE__*/_jsx(CardHeader,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-start\",children:[/*#__PURE__*/_jsx(CardTitle,{className:\"text-lg\",children:task.title}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-1\",children:[/*#__PURE__*/_jsx(Button,{size:\"sm\",variant:\"ghost\",onClick:()=>handleEdit(task),children:/*#__PURE__*/_jsx(Edit3,{className:\"h-4 w-4\"})}),/*#__PURE__*/_jsx(Button,{size:\"sm\",variant:\"ghost\",onClick:()=>handleDelete(task.id),children:/*#__PURE__*/_jsx(Trash2,{className:\"h-4 w-4\"})})]})]})}),/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-3\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600\",children:task.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-wrap gap-2\",children:[/*#__PURE__*/_jsx(Badge,{className:getStatusColor(task.status),children:task.status.replace('_',' ')}),/*#__PURE__*/_jsx(Badge,{className:getPriorityColor(task.priority),children:task.priority})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center text-sm text-gray-500\",children:[/*#__PURE__*/_jsx(User,{className:\"mr-1 h-4 w-4\"}),getAssignedEmployeeName(task.assigned_to)]}),task.due_date&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center text-sm text-gray-500\",children:[/*#__PURE__*/_jsx(Calendar,{className:\"mr-1 h-4 w-4\"}),new Date(task.due_date).toLocaleDateString()]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center text-xs text-gray-400\",children:[/*#__PURE__*/_jsx(Clock,{className:\"mr-1 h-3 w-3\"}),\"Created: \",new Date(task.created_at).toLocaleDateString()]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-1\",children:[task.status!=='pending'&&/*#__PURE__*/_jsx(Button,{size:\"sm\",variant:\"outline\",onClick:()=>handleStatusChange(task.id,'pending'),children:\"Mark Pending\"}),task.status!=='in_progress'&&/*#__PURE__*/_jsx(Button,{size:\"sm\",variant:\"outline\",onClick:()=>handleStatusChange(task.id,'in_progress'),children:\"Start\"}),task.status!=='completed'&&/*#__PURE__*/_jsxs(Button,{size:\"sm\",variant:\"outline\",onClick:()=>handleStatusChange(task.id,'completed'),children:[/*#__PURE__*/_jsx(CheckCircle,{className:\"mr-1 h-3 w-3\"}),\"Complete\"]})]})]})})]},task.id))}),filteredTasks.length===0&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-12\",children:[/*#__PURE__*/_jsx(AlertCircle,{className:\"mx-auto h-12 w-12 text-gray-400\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"mt-2 text-sm font-medium text-gray-900\",children:\"No tasks found\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-1 text-sm text-gray-500\",children:filter==='all'?'Get started by creating a new task.':\"No tasks with status \\\"\".concat(filter,\"\\\".\")}),filter==='all'&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-6\",children:/*#__PURE__*/_jsxs(Button,{onClick:()=>setShowAddForm(true),children:[/*#__PURE__*/_jsx(PlusCircle,{className:\"mr-2 h-4 w-4\"}),\"Add your first task\"]})})]})]});};export default Work;","map":{"version":3,"names":["React","useState","useEffect","Card","CardContent","CardHeader","CardTitle","Button","Badge","Textarea","Input","PlusCircle","Calendar","User","Clock","CheckCircle","AlertCircle","Trash2","Edit3","toast","taskAPI","employeeAPI","SearchableEmployeeDropdown","jsx","_jsx","jsxs","_jsxs","Work","tasks","setTasks","employees","setEmployees","showAddForm","setShowAddForm","editingTask","setEditingTask","formData","setFormData","title","description","assigned_to","priority","status","due_date","loading","setLoading","filter","setFilter","fetchTasks","fetchEmployees","data","getAll","error","console","handleSubmit","e","preventDefault","update","id","success","create","resetForm","handleStatusChange","taskId","newStatus","handleDelete","delete","handleEdit","task","_objectSpread","filteredTasks","getStatusColor","getPriorityColor","getAssignedEmployeeName","employeeId","employee","find","emp","name","className","children","onClick","key","label","map","tab","variant","onSubmit","value","onChange","target","required","selectedEmployeeId","onEmployeeSelect","placeholder","type","rows","size","replace","Date","toLocaleDateString","created_at","length","concat"],"sources":["D:/SMARTDESK APPLICATION FILES/EMPLOYEE_DIR_BETA1/frontend/src/components/Work.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from './ui/card';\r\nimport { Button } from './ui/button';\r\nimport { Badge } from './ui/badge';\r\nimport { Textarea } from './ui/textarea';\r\nimport { Input } from './ui/input';\r\nimport { PlusCircle, Calendar, User, Clock, CheckCircle, AlertCircle, Trash2, Edit3 } from 'lucide-react';\r\nimport { toast } from 'sonner';\r\nimport { taskAPI, employeeAPI } from '../services/api';\r\nimport SearchableEmployeeDropdown from './ui/SearchableEmployeeDropdown';\r\n\r\nconst Work = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [employees, setEmployees] = useState([]);\r\n  const [showAddForm, setShowAddForm] = useState(false);\r\n  const [editingTask, setEditingTask] = useState(null);\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    description: '',\r\n    assigned_to: '',\r\n    priority: 'medium',\r\n    status: 'pending',\r\n    due_date: ''\r\n  });\r\n  const [loading, setLoading] = useState(true);\r\n  const [filter, setFilter] = useState('all');\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n    fetchEmployees();\r\n  }, []);\r\n\r\n  const fetchTasks = async () => {\r\n    try {\r\n      const data = await taskAPI.getAll();\r\n      setTasks(data);\r\n    } catch (error) {\r\n      console.error('Error fetching tasks:', error);\r\n      toast.error('Failed to load tasks');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchEmployees = async () => {\r\n    try {\r\n      const data = await employeeAPI.getAll();\r\n      setEmployees(data);\r\n    } catch (error) {\r\n      console.error('Error fetching employees:', error);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      if (editingTask) {\r\n        await taskAPI.update(editingTask.id, formData);\r\n        toast.success('Task updated successfully');\r\n      } else {\r\n        await taskAPI.create(formData);\r\n        toast.success('Task created successfully');\r\n      }\r\n      \r\n      fetchTasks();\r\n      resetForm();\r\n    } catch (error) {\r\n      console.error('Error saving task:', error);\r\n      toast.error('Failed to save task');\r\n    }\r\n  };\r\n\r\n  const handleStatusChange = async (taskId, newStatus) => {\r\n    try {\r\n      await taskAPI.update(taskId, { status: newStatus });\r\n      toast.success('Task status updated');\r\n      fetchTasks();\r\n    } catch (error) {\r\n      console.error('Error updating task status:', error);\r\n      toast.error('Failed to update task status');\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (taskId) => {\r\n    try {\r\n      await taskAPI.delete(taskId);\r\n      toast.success('Task deleted successfully');\r\n      fetchTasks();\r\n    } catch (error) {\r\n      console.error('Error deleting task:', error);\r\n      toast.error('Failed to delete task');\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setFormData({\r\n      title: '',\r\n      description: '',\r\n      assigned_to: '',\r\n      priority: 'medium',\r\n      status: 'pending',\r\n      due_date: ''\r\n    });\r\n    setShowAddForm(false);\r\n    setEditingTask(null);\r\n  };\r\n\r\n  const handleEdit = (task) => {\r\n    setFormData({ ...task });\r\n    setEditingTask(task);\r\n    setShowAddForm(true);\r\n  };\r\n\r\n  const filteredTasks = tasks.filter(task => {\r\n    if (filter === 'all') return true;\r\n    return task.status === filter;\r\n  });\r\n\r\n  const getStatusColor = (status) => {\r\n    switch (status) {\r\n      case 'completed':\r\n        return 'bg-green-100 text-green-800';\r\n      case 'in_progress':\r\n        return 'bg-blue-100 text-blue-800';\r\n      case 'pending':\r\n        return 'bg-yellow-100 text-yellow-800';\r\n      default:\r\n        return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const getPriorityColor = (priority) => {\r\n    switch (priority) {\r\n      case 'high':\r\n        return 'bg-red-100 text-red-800';\r\n      case 'medium':\r\n        return 'bg-orange-100 text-orange-800';\r\n      case 'low':\r\n        return 'bg-green-100 text-green-800';\r\n      default:\r\n        return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const getAssignedEmployeeName = (employeeId) => {\r\n    const employee = employees.find(emp => emp.id === employeeId);\r\n    return employee ? employee.name : 'Unassigned';\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen\">\r\n        <div className=\"text-lg\">Loading tasks...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-6 max-w-6xl mx-auto\">\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h1 className=\"text-3xl font-bold text-gray-900\">Task Management</h1>\r\n        <Button onClick={() => setShowAddForm(true)}>\r\n          <PlusCircle className=\"mr-2 h-4 w-4\" />\r\n          Add Task\r\n        </Button>\r\n      </div>\r\n\r\n      {/* Filter Tabs */}\r\n      <div className=\"flex space-x-2 mb-6\">\r\n        {[\r\n          { key: 'all', label: 'All Tasks' },\r\n          { key: 'pending', label: 'Pending' },\r\n          { key: 'in_progress', label: 'In Progress' },\r\n          { key: 'completed', label: 'Completed' }\r\n        ].map(tab => (\r\n          <Button\r\n            key={tab.key}\r\n            variant={filter === tab.key ? \"default\" : \"outline\"}\r\n            onClick={() => setFilter(tab.key)}\r\n          >\r\n            {tab.label}\r\n          </Button>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Add/Edit Task Form */}\r\n      {showAddForm && (\r\n        <Card className=\"mb-6\">\r\n          <CardHeader>\r\n            <CardTitle>{editingTask ? 'Edit Task' : 'Create New Task'}</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium mb-1\">Title</label>\r\n                  <Input\r\n                    value={formData.title}\r\n                    onChange={(e) => setFormData({...formData, title: e.target.value})}\r\n                    required\r\n                  />\r\n                </div>\r\n                \r\n                <div>\r\n                  <label className=\"block text-sm font-medium mb-1\">Assign To</label>\r\n                  <SearchableEmployeeDropdown\r\n                    employees={employees}\r\n                    selectedEmployeeId={formData.assigned_to}\r\n                    onEmployeeSelect={(employeeId) => setFormData({...formData, assigned_to: employeeId})}\r\n                    placeholder=\"Search by employee name or ID...\"\r\n                    required\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium mb-1\">Priority</label>\r\n                  <select\r\n                    value={formData.priority}\r\n                    onChange={(e) => setFormData({...formData, priority: e.target.value})}\r\n                    className=\"w-full p-2 border rounded-md\"\r\n                  >\r\n                    <option value=\"low\">Low</option>\r\n                    <option value=\"medium\">Medium</option>\r\n                    <option value=\"high\">High</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium mb-1\">Status</label>\r\n                  <select\r\n                    value={formData.status}\r\n                    onChange={(e) => setFormData({...formData, status: e.target.value})}\r\n                    className=\"w-full p-2 border rounded-md\"\r\n                  >\r\n                    <option value=\"pending\">Pending</option>\r\n                    <option value=\"in_progress\">In Progress</option>\r\n                    <option value=\"completed\">Completed</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium mb-1\">Due Date</label>\r\n                  <Input\r\n                    type=\"date\"\r\n                    value={formData.due_date}\r\n                    onChange={(e) => setFormData({...formData, due_date: e.target.value})}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium mb-1\">Description</label>\r\n                <Textarea\r\n                  value={formData.description}\r\n                  onChange={(e) => setFormData({...formData, description: e.target.value})}\r\n                  rows={3}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"flex space-x-2\">\r\n                <Button type=\"submit\">\r\n                  {editingTask ? 'Update Task' : 'Create Task'}\r\n                </Button>\r\n                <Button type=\"button\" variant=\"outline\" onClick={resetForm}>\r\n                  Cancel\r\n                </Button>\r\n              </div>\r\n            </form>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n\r\n      {/* Tasks Grid */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n        {filteredTasks.map(task => (\r\n          <Card key={task.id} className=\"hover:shadow-md transition-shadow\">\r\n            <CardHeader>\r\n              <div className=\"flex justify-between items-start\">\r\n                <CardTitle className=\"text-lg\">{task.title}</CardTitle>\r\n                <div className=\"flex space-x-1\">\r\n                  <Button\r\n                    size=\"sm\"\r\n                    variant=\"ghost\"\r\n                    onClick={() => handleEdit(task)}\r\n                  >\r\n                    <Edit3 className=\"h-4 w-4\" />\r\n                  </Button>\r\n                  <Button\r\n                    size=\"sm\"\r\n                    variant=\"ghost\"\r\n                    onClick={() => handleDelete(task.id)}\r\n                  >\r\n                    <Trash2 className=\"h-4 w-4\" />\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-3\">\r\n                <p className=\"text-sm text-gray-600\">{task.description}</p>\r\n                \r\n                <div className=\"flex flex-wrap gap-2\">\r\n                  <Badge className={getStatusColor(task.status)}>\r\n                    {task.status.replace('_', ' ')}\r\n                  </Badge>\r\n                  <Badge className={getPriorityColor(task.priority)}>\r\n                    {task.priority}\r\n                  </Badge>\r\n                </div>\r\n\r\n                <div className=\"flex items-center text-sm text-gray-500\">\r\n                  <User className=\"mr-1 h-4 w-4\" />\r\n                  {getAssignedEmployeeName(task.assigned_to)}\r\n                </div>\r\n\r\n                {task.due_date && (\r\n                  <div className=\"flex items-center text-sm text-gray-500\">\r\n                    <Calendar className=\"mr-1 h-4 w-4\" />\r\n                    {new Date(task.due_date).toLocaleDateString()}\r\n                  </div>\r\n                )}\r\n\r\n                <div className=\"flex items-center text-xs text-gray-400\">\r\n                  <Clock className=\"mr-1 h-3 w-3\" />\r\n                  Created: {new Date(task.created_at).toLocaleDateString()}\r\n                </div>\r\n\r\n                {/* Status Update Buttons */}\r\n                <div className=\"flex space-x-1\">\r\n                  {task.status !== 'pending' && (\r\n                    <Button\r\n                      size=\"sm\"\r\n                      variant=\"outline\"\r\n                      onClick={() => handleStatusChange(task.id, 'pending')}\r\n                    >\r\n                      Mark Pending\r\n                    </Button>\r\n                  )}\r\n                  {task.status !== 'in_progress' && (\r\n                    <Button\r\n                      size=\"sm\"\r\n                      variant=\"outline\"\r\n                      onClick={() => handleStatusChange(task.id, 'in_progress')}\r\n                    >\r\n                      Start\r\n                    </Button>\r\n                  )}\r\n                  {task.status !== 'completed' && (\r\n                    <Button\r\n                      size=\"sm\"\r\n                      variant=\"outline\"\r\n                      onClick={() => handleStatusChange(task.id, 'completed')}\r\n                    >\r\n                      <CheckCircle className=\"mr-1 h-3 w-3\" />\r\n                      Complete\r\n                    </Button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        ))}\r\n      </div>\r\n\r\n      {filteredTasks.length === 0 && (\r\n        <div className=\"text-center py-12\">\r\n          <AlertCircle className=\"mx-auto h-12 w-12 text-gray-400\" />\r\n          <h3 className=\"mt-2 text-sm font-medium text-gray-900\">No tasks found</h3>\r\n          <p className=\"mt-1 text-sm text-gray-500\">\r\n            {filter === 'all' \r\n              ? 'Get started by creating a new task.' \r\n              : `No tasks with status \"${filter}\".`}\r\n          </p>\r\n          {filter === 'all' && (\r\n            <div className=\"mt-6\">\r\n              <Button onClick={() => setShowAddForm(true)}>\r\n                <PlusCircle className=\"mr-2 h-4 w-4\" />\r\n                Add your first task\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Work;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}