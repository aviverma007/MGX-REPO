{"ast":null,"code":"var _jsxFileName = \"D:\\\\SMARTDESK APPLICATION FILES\\\\EMPLOYEE_DIR_BETA1\\\\frontend\\\\src\\\\components\\\\HierarchyBuilder.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo, useEffect } from \"react\";\nimport { Users, Plus, Trash2, RotateCcw, Network, Table as TableIcon, Save, Shield, RefreshCw } from \"lucide-react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"./ui/card\";\nimport { Button } from \"./ui/button\";\nimport { Badge } from \"./ui/badge\";\nimport { employeeAPI, hierarchyAPI } from \"../services/api\";\nimport HierarchyTree from \"./HierarchyTree\";\nimport HierarchyTable from \"./HierarchyTable\";\nimport SearchableSelect from \"./ui/searchable-select\";\nimport { toast } from \"sonner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HierarchyBuilder = () => {\n  _s();\n  const [hierarchyData, setHierarchyData] = useState([]);\n  const [selectedEmployee, setSelectedEmployee] = useState(\"\");\n  const [selectedManager, setSelectedManager] = useState(\"\");\n  const [viewMode, setViewMode] = useState(\"tree\");\n  const [employees, setEmployees] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [hasUnsavedChanges, setHasUnsavedChanges] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n\n  // Load all employees and hierarchy data on component mount\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        setLoading(true);\n        const [employeeData, hierarchyDataFromAPI] = await Promise.all([employeeAPI.getAll(), hierarchyAPI.getAll()]);\n        setEmployees(employeeData);\n        setHierarchyData(hierarchyDataFromAPI);\n      } catch (error) {\n        console.error(\"Error loading data:\", error);\n        toast.error(\"Error loading employee and hierarchy data\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadData();\n  }, []);\n\n  // Get available employees for dropdown with search-friendly format\n  const availableEmployees = useMemo(() => {\n    return employees.map(emp => ({\n      value: emp.id,\n      label: `${emp.name} (${emp.id}) - ${emp.department}`,\n      searchValue: `${emp.name} ${emp.id} ${emp.department}`.toLowerCase()\n    }));\n  }, [employees]);\n\n  // Get available managers (all employees can be managers)\n  const availableManagers = availableEmployees;\n\n  // Build hierarchy structure for visualization\n  const hierarchyStructure = useMemo(() => {\n    const empMap = new Map(employees.map(emp => [emp.id, emp]));\n    const childrenMap = new Map();\n\n    // Initialize children map\n    employees.forEach(emp => {\n      childrenMap.set(emp.id, []);\n    });\n\n    // Build children relationships from hierarchy data\n    hierarchyData.forEach(rel => {\n      const managerId = rel.reportsTo;\n      if (childrenMap.has(managerId)) {\n        const employee = empMap.get(rel.employeeId);\n        if (employee) {\n          childrenMap.get(managerId).push(employee);\n        }\n      }\n    });\n\n    // Find true root managers (those who don't report to anyone but have people in the hierarchy)\n    const employeesInHierarchy = new Set();\n    const managersInHierarchy = new Set();\n    hierarchyData.forEach(rel => {\n      employeesInHierarchy.add(rel.employeeId);\n      managersInHierarchy.add(rel.reportsTo);\n    });\n\n    // Root managers are those who:\n    // 1. Are managers in the hierarchy (have people reporting to them)\n    // 2. Are NOT employees in the hierarchy (don't report to anyone themselves)\n    const rootManagers = [...managersInHierarchy].filter(managerId => !employeesInHierarchy.has(managerId)).map(managerId => empMap.get(managerId)).filter(Boolean);\n    return {\n      empMap,\n      childrenMap,\n      topLevel: rootManagers\n    };\n  }, [hierarchyData, employees]);\n  const handleAddRelationship = async () => {\n    if (!selectedEmployee || !selectedManager) {\n      toast.error(\"Please select both employee and manager\");\n      return;\n    }\n    if (selectedEmployee === selectedManager) {\n      toast.error(\"Employee cannot report to themselves\");\n      return;\n    }\n\n    // Check if relationship already exists\n    const existingRelation = hierarchyData.find(rel => rel.employeeId === selectedEmployee);\n    if (existingRelation) {\n      toast.error(\"This employee already has a reporting manager\");\n      return;\n    }\n    try {\n      // Create new relationship via API\n      const newRelation = await hierarchyAPI.create({\n        employeeId: selectedEmployee,\n        reportsTo: selectedManager\n      });\n\n      // Update local state\n      setHierarchyData(prev => [...prev, newRelation]);\n      setSelectedEmployee(\"\");\n      setSelectedManager(\"\");\n      toast.success(\"Reporting relationship added successfully!\");\n    } catch (error) {\n      console.error(\"Error adding relationship:\", error);\n      toast.error(\"Failed to add reporting relationship\");\n    }\n  };\n  const handleRemoveRelationship = async employeeId => {\n    try {\n      await hierarchyAPI.remove(employeeId);\n      setHierarchyData(prev => prev.filter(rel => rel.employeeId !== employeeId));\n      toast.success(\"Reporting relationship removed successfully!\");\n    } catch (error) {\n      console.error(\"Error removing relationship:\", error);\n      toast.error(\"Failed to remove reporting relationship\");\n    }\n  };\n  const handleClearAll = async () => {\n    try {\n      await hierarchyAPI.clearAll();\n      setHierarchyData([]);\n      toast.success(\"All reporting relationships cleared successfully!\");\n    } catch (error) {\n      console.error(\"Error clearing relationships:\", error);\n      toast.error(\"Failed to clear reporting relationships\");\n    }\n  };\n  const getEmployeeName = employeeId => {\n    const employee = employees.find(emp => emp.id === employeeId);\n    return employee ? employee.name : employeeId;\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center py-20\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-4 text-blue-600\",\n          children: \"Loading employee and hierarchy data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      className: \"border-blue-200 shadow-sm bg-white\",\n      children: /*#__PURE__*/_jsxDEV(CardHeader, {\n        className: \"pb-4 bg-blue-50\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center\",\n          children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n            className: \"flex items-center space-x-2 text-blue-900\",\n            children: [/*#__PURE__*/_jsxDEV(Shield, {\n              className: \"h-5 w-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Hierarchy Builder\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: viewMode === \"tree\" ? \"default\" : \"outline\",\n              size: \"sm\",\n              onClick: () => setViewMode(\"tree\"),\n              className: `flex items-center space-x-2 ${viewMode === \"tree\" ? \"bg-blue-600 hover:bg-blue-700\" : \"border-blue-200 text-blue-700 hover:bg-blue-50\"}`,\n              children: [/*#__PURE__*/_jsxDEV(Network, {\n                className: \"h-4 w-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Box View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: viewMode === \"table\" ? \"default\" : \"outline\",\n              size: \"sm\",\n              onClick: () => setViewMode(\"table\"),\n              className: `flex items-center space-x-2 ${viewMode === \"table\" ? \"bg-blue-600 hover:bg-blue-700\" : \"border-blue-200 text-blue-700 hover:bg-blue-50\"}`,\n              children: [/*#__PURE__*/_jsxDEV(TableIcon, {\n                className: \"h-4 w-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Table View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"border-blue-200 shadow-sm bg-white\",\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        className: \"bg-blue-50\",\n        children: /*#__PURE__*/_jsxDEV(CardTitle, {\n          className: \"text-lg text-blue-900\",\n          children: \"Add Reporting Relationship\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        className: \"space-y-4 p-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 lg:grid-cols-3 gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-sm font-medium text-blue-900\",\n              children: \"Select Employee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(SearchableSelect, {\n              value: selectedEmployee,\n              onValueChange: setSelectedEmployee,\n              options: availableEmployees,\n              placeholder: \"Choose employee...\",\n              searchPlaceholder: \"Search employees...\",\n              className: \"border-blue-200 focus:border-blue-400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-sm font-medium text-blue-900\",\n              children: \"Reports To\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(SearchableSelect, {\n              value: selectedManager,\n              onValueChange: setSelectedManager,\n              options: availableManagers,\n              placeholder: \"Choose manager...\",\n              searchPlaceholder: \"Search managers...\",\n              className: \"border-blue-200 focus:border-blue-400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-2 items-end\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleAddRelationship,\n              className: \"flex-1 bg-blue-600 hover:bg-blue-700\",\n              children: [/*#__PURE__*/_jsxDEV(Plus, {\n                className: \"h-4 w-4 mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 17\n              }, this), \"Add\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline\",\n              onClick: handleClearAll,\n              className: \"flex items-center space-x-2 border-blue-200 text-blue-700 hover:bg-blue-50\",\n              children: [/*#__PURE__*/_jsxDEV(RotateCcw, {\n                className: \"h-4 w-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Clear All\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"border-blue-200 shadow-sm bg-white\",\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        className: \"bg-blue-50\",\n        children: /*#__PURE__*/_jsxDEV(CardTitle, {\n          className: \"text-lg text-blue-900\",\n          children: [\"Current Relationships (\", hierarchyData.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        className: \"p-6\",\n        children: hierarchyData.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center py-8 text-blue-500\",\n          children: [/*#__PURE__*/_jsxDEV(Users, {\n            className: \"h-12 w-12 mx-auto mb-4 opacity-50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No reporting relationships defined yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm\",\n            children: \"Add relationships above to build the organizational hierarchy.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 lg:grid-cols-2 gap-4\",\n          children: hierarchyData.map(rel => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between p-3 bg-blue-50 rounded-lg border border-blue-200\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"font-medium text-sm text-blue-900\",\n                children: getEmployeeName(rel.employeeId)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-xs text-blue-600\",\n                children: [\"reports to \", getEmployeeName(rel.reportsTo)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"ghost\",\n              size: \"sm\",\n              onClick: () => handleRemoveRelationship(rel.employeeId),\n              className: \"text-red-600 hover:text-red-700 hover:bg-red-50\",\n              children: /*#__PURE__*/_jsxDEV(Trash2, {\n                className: \"h-4 w-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 19\n            }, this)]\n          }, rel.employeeId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this), hierarchyData.length > 0 && /*#__PURE__*/_jsxDEV(Card, {\n      className: \"border-blue-200 shadow-sm bg-white\",\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        className: \"bg-blue-50\",\n        children: /*#__PURE__*/_jsxDEV(CardTitle, {\n          className: \"text-lg text-blue-900\",\n          children: viewMode === \"tree\" ? \"Organizational Structure\" : \"Hierarchy Table\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        className: \"p-6\",\n        children: viewMode === \"tree\" ? /*#__PURE__*/_jsxDEV(HierarchyTree, {\n          hierarchyStructure: hierarchyStructure\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(HierarchyTable, {\n          hierarchyData: hierarchyData,\n          employees: employees\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n};\n_s(HierarchyBuilder, \"h+mkA5VTPsHHmdnaCWmuwRik+64=\");\n_c = HierarchyBuilder;\nexport default HierarchyBuilder;\nvar _c;\n$RefreshReg$(_c, \"HierarchyBuilder\");","map":{"version":3,"names":["React","useState","useMemo","useEffect","Users","Plus","Trash2","RotateCcw","Network","Table","TableIcon","Save","Shield","RefreshCw","Card","CardContent","CardHeader","CardTitle","Button","Badge","employeeAPI","hierarchyAPI","HierarchyTree","HierarchyTable","SearchableSelect","toast","jsxDEV","_jsxDEV","HierarchyBuilder","_s","hierarchyData","setHierarchyData","selectedEmployee","setSelectedEmployee","selectedManager","setSelectedManager","viewMode","setViewMode","employees","setEmployees","loading","setLoading","hasUnsavedChanges","setHasUnsavedChanges","isSaving","setIsSaving","loadData","employeeData","hierarchyDataFromAPI","Promise","all","getAll","error","console","availableEmployees","map","emp","value","id","label","name","department","searchValue","toLowerCase","availableManagers","hierarchyStructure","empMap","Map","childrenMap","forEach","set","rel","managerId","reportsTo","has","employee","get","employeeId","push","employeesInHierarchy","Set","managersInHierarchy","add","rootManagers","filter","Boolean","topLevel","handleAddRelationship","existingRelation","find","newRelation","create","prev","success","handleRemoveRelationship","remove","handleClearAll","clearAll","getEmployeeName","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","size","onClick","onValueChange","options","placeholder","searchPlaceholder","length","_c","$RefreshReg$"],"sources":["D:/SMARTDESK APPLICATION FILES/EMPLOYEE_DIR_BETA1/frontend/src/components/HierarchyBuilder.jsx"],"sourcesContent":["import React, { useState, useMemo, useEffect } from \"react\";\r\nimport { Users, Plus, Trash2, RotateCcw, Network, Table as TableIcon, Save, Shield, RefreshCw } from \"lucide-react\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"./ui/card\";\r\nimport { Button } from \"./ui/button\";\r\nimport { Badge } from \"./ui/badge\";\r\nimport { employeeAPI, hierarchyAPI } from \"../services/api\";\r\nimport HierarchyTree from \"./HierarchyTree\";\r\nimport HierarchyTable from \"./HierarchyTable\";\r\nimport SearchableSelect from \"./ui/searchable-select\";\r\nimport { toast } from \"sonner\";\r\n\r\nconst HierarchyBuilder = () => {\r\n  const [hierarchyData, setHierarchyData] = useState([]);\r\n  const [selectedEmployee, setSelectedEmployee] = useState(\"\");\r\n  const [selectedManager, setSelectedManager] = useState(\"\");\r\n  const [viewMode, setViewMode] = useState(\"tree\");\r\n  const [employees, setEmployees] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [hasUnsavedChanges, setHasUnsavedChanges] = useState(false);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n\r\n  // Load all employees and hierarchy data on component mount\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const [employeeData, hierarchyDataFromAPI] = await Promise.all([\r\n          employeeAPI.getAll(),\r\n          hierarchyAPI.getAll()\r\n        ]);\r\n        \r\n        setEmployees(employeeData);\r\n        setHierarchyData(hierarchyDataFromAPI);\r\n      } catch (error) {\r\n        console.error(\"Error loading data:\", error);\r\n        toast.error(\"Error loading employee and hierarchy data\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadData();\r\n  }, []);\r\n\r\n  // Get available employees for dropdown with search-friendly format\r\n  const availableEmployees = useMemo(() => {\r\n    return employees.map(emp => ({\r\n      value: emp.id,\r\n      label: `${emp.name} (${emp.id}) - ${emp.department}`,\r\n      searchValue: `${emp.name} ${emp.id} ${emp.department}`.toLowerCase()\r\n    }));\r\n  }, [employees]);\r\n\r\n  // Get available managers (all employees can be managers)\r\n  const availableManagers = availableEmployees;\r\n\r\n  // Build hierarchy structure for visualization\r\n  const hierarchyStructure = useMemo(() => {\r\n    const empMap = new Map(employees.map(emp => [emp.id, emp]));\r\n    const childrenMap = new Map();\r\n    \r\n    // Initialize children map\r\n    employees.forEach(emp => {\r\n      childrenMap.set(emp.id, []);\r\n    });\r\n\r\n    // Build children relationships from hierarchy data\r\n    hierarchyData.forEach(rel => {\r\n      const managerId = rel.reportsTo;\r\n      if (childrenMap.has(managerId)) {\r\n        const employee = empMap.get(rel.employeeId);\r\n        if (employee) {\r\n          childrenMap.get(managerId).push(employee);\r\n        }\r\n      }\r\n    });\r\n\r\n    // Find true root managers (those who don't report to anyone but have people in the hierarchy)\r\n    const employeesInHierarchy = new Set();\r\n    const managersInHierarchy = new Set();\r\n    \r\n    hierarchyData.forEach(rel => {\r\n      employeesInHierarchy.add(rel.employeeId);\r\n      managersInHierarchy.add(rel.reportsTo);\r\n    });\r\n    \r\n    // Root managers are those who:\r\n    // 1. Are managers in the hierarchy (have people reporting to them)\r\n    // 2. Are NOT employees in the hierarchy (don't report to anyone themselves)\r\n    const rootManagers = [...managersInHierarchy]\r\n      .filter(managerId => !employeesInHierarchy.has(managerId))\r\n      .map(managerId => empMap.get(managerId))\r\n      .filter(Boolean);\r\n\r\n    return { empMap, childrenMap, topLevel: rootManagers };\r\n  }, [hierarchyData, employees]);\r\n\r\n  const handleAddRelationship = async () => {\r\n    if (!selectedEmployee || !selectedManager) {\r\n      toast.error(\"Please select both employee and manager\");\r\n      return;\r\n    }\r\n\r\n    if (selectedEmployee === selectedManager) {\r\n      toast.error(\"Employee cannot report to themselves\");\r\n      return;\r\n    }\r\n\r\n    // Check if relationship already exists\r\n    const existingRelation = hierarchyData.find(rel => rel.employeeId === selectedEmployee);\r\n    if (existingRelation) {\r\n      toast.error(\"This employee already has a reporting manager\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Create new relationship via API\r\n      const newRelation = await hierarchyAPI.create({\r\n        employeeId: selectedEmployee,\r\n        reportsTo: selectedManager\r\n      });\r\n\r\n      // Update local state\r\n      setHierarchyData(prev => [...prev, newRelation]);\r\n      setSelectedEmployee(\"\");\r\n      setSelectedManager(\"\");\r\n      toast.success(\"Reporting relationship added successfully!\");\r\n    } catch (error) {\r\n      console.error(\"Error adding relationship:\", error);\r\n      toast.error(\"Failed to add reporting relationship\");\r\n    }\r\n  };\r\n\r\n  const handleRemoveRelationship = async (employeeId) => {\r\n    try {\r\n      await hierarchyAPI.remove(employeeId);\r\n      setHierarchyData(prev => prev.filter(rel => rel.employeeId !== employeeId));\r\n      toast.success(\"Reporting relationship removed successfully!\");\r\n    } catch (error) {\r\n      console.error(\"Error removing relationship:\", error);\r\n      toast.error(\"Failed to remove reporting relationship\");\r\n    }\r\n  };\r\n\r\n  const handleClearAll = async () => {\r\n    try {\r\n      await hierarchyAPI.clearAll();\r\n      setHierarchyData([]);\r\n      toast.success(\"All reporting relationships cleared successfully!\");\r\n    } catch (error) {\r\n      console.error(\"Error clearing relationships:\", error);\r\n      toast.error(\"Failed to clear reporting relationships\");\r\n    }\r\n  };\r\n\r\n  const getEmployeeName = (employeeId) => {\r\n    const employee = employees.find(emp => emp.id === employeeId);\r\n    return employee ? employee.name : employeeId;\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center py-20\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"></div>\r\n          <p className=\"mt-4 text-blue-600\">Loading employee and hierarchy data...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header with View Toggle */}\r\n      <Card className=\"border-blue-200 shadow-sm bg-white\">\r\n        <CardHeader className=\"pb-4 bg-blue-50\">\r\n          <div className=\"flex justify-between items-center\">\r\n            <CardTitle className=\"flex items-center space-x-2 text-blue-900\">\r\n              <Shield className=\"h-5 w-5\" />\r\n              <span>Hierarchy Builder</span>\r\n            </CardTitle>\r\n            \r\n            <div className=\"flex space-x-2\">\r\n              <Button\r\n                variant={viewMode === \"tree\" ? \"default\" : \"outline\"}\r\n                size=\"sm\"\r\n                onClick={() => setViewMode(\"tree\")}\r\n                className={`flex items-center space-x-2 ${\r\n                  viewMode === \"tree\" \r\n                    ? \"bg-blue-600 hover:bg-blue-700\" \r\n                    : \"border-blue-200 text-blue-700 hover:bg-blue-50\"\r\n                }`}\r\n              >\r\n                <Network className=\"h-4 w-4\" />\r\n                <span>Box View</span>\r\n              </Button>\r\n              <Button\r\n                variant={viewMode === \"table\" ? \"default\" : \"outline\"}\r\n                size=\"sm\"\r\n                onClick={() => setViewMode(\"table\")}\r\n                className={`flex items-center space-x-2 ${\r\n                  viewMode === \"table\" \r\n                    ? \"bg-blue-600 hover:bg-blue-700\" \r\n                    : \"border-blue-200 text-blue-700 hover:bg-blue-50\"\r\n                }`}\r\n              >\r\n                <TableIcon className=\"h-4 w-4\" />\r\n                <span>Table View</span>\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </CardHeader>\r\n      </Card>\r\n\r\n      {/* Add Relationship Form */}\r\n      <Card className=\"border-blue-200 shadow-sm bg-white\">\r\n        <CardHeader className=\"bg-blue-50\">\r\n          <CardTitle className=\"text-lg text-blue-900\">Add Reporting Relationship</CardTitle>\r\n        </CardHeader>\r\n        <CardContent className=\"space-y-4 p-6\">\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-4\">\r\n            {/* Select Employee */}\r\n            <div className=\"space-y-2\">\r\n              <label className=\"text-sm font-medium text-blue-900\">Select Employee</label>\r\n              <SearchableSelect\r\n                value={selectedEmployee}\r\n                onValueChange={setSelectedEmployee}\r\n                options={availableEmployees}\r\n                placeholder=\"Choose employee...\"\r\n                searchPlaceholder=\"Search employees...\"\r\n                className=\"border-blue-200 focus:border-blue-400\"\r\n              />\r\n            </div>\r\n\r\n            {/* Select Manager */}\r\n            <div className=\"space-y-2\">\r\n              <label className=\"text-sm font-medium text-blue-900\">Reports To</label>\r\n              <SearchableSelect\r\n                value={selectedManager}\r\n                onValueChange={setSelectedManager}\r\n                options={availableManagers}\r\n                placeholder=\"Choose manager...\"\r\n                searchPlaceholder=\"Search managers...\"\r\n                className=\"border-blue-200 focus:border-blue-400\"\r\n              />\r\n            </div>\r\n\r\n            {/* Action Buttons */}\r\n            <div className=\"flex space-x-2 items-end\">\r\n              <Button \r\n                onClick={handleAddRelationship} \r\n                className=\"flex-1 bg-blue-600 hover:bg-blue-700\"\r\n              >\r\n                <Plus className=\"h-4 w-4 mr-2\" />\r\n                Add\r\n              </Button>\r\n              <Button \r\n                variant=\"outline\" \r\n                onClick={handleClearAll}\r\n                className=\"flex items-center space-x-2 border-blue-200 text-blue-700 hover:bg-blue-50\"\r\n              >\r\n                <RotateCcw className=\"h-4 w-4\" />\r\n                <span>Clear All</span>\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Current Relationships Summary */}\r\n      <Card className=\"border-blue-200 shadow-sm bg-white\">\r\n        <CardHeader className=\"bg-blue-50\">\r\n          <CardTitle className=\"text-lg text-blue-900\">Current Relationships ({hierarchyData.length})</CardTitle>\r\n        </CardHeader>\r\n        <CardContent className=\"p-6\">\r\n          {hierarchyData.length === 0 ? (\r\n            <div className=\"text-center py-8 text-blue-500\">\r\n              <Users className=\"h-12 w-12 mx-auto mb-4 opacity-50\" />\r\n              <p>No reporting relationships defined yet.</p>\r\n              <p className=\"text-sm\">Add relationships above to build the organizational hierarchy.</p>\r\n            </div>\r\n          ) : (\r\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\r\n              {hierarchyData.map(rel => (\r\n                <div key={rel.employeeId} className=\"flex items-center justify-between p-3 bg-blue-50 rounded-lg border border-blue-200\">\r\n                  <div className=\"space-y-1\">\r\n                    <p className=\"font-medium text-sm text-blue-900\">{getEmployeeName(rel.employeeId)}</p>\r\n                    <p className=\"text-xs text-blue-600\">reports to {getEmployeeName(rel.reportsTo)}</p>\r\n                  </div>\r\n                  <Button\r\n                    variant=\"ghost\"\r\n                    size=\"sm\"\r\n                    onClick={() => handleRemoveRelationship(rel.employeeId)}\r\n                    className=\"text-red-600 hover:text-red-700 hover:bg-red-50\"\r\n                  >\r\n                    <Trash2 className=\"h-4 w-4\" />\r\n                  </Button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Hierarchy Visualization */}\r\n      {hierarchyData.length > 0 && (\r\n        <Card className=\"border-blue-200 shadow-sm bg-white\">\r\n          <CardHeader className=\"bg-blue-50\">\r\n            <CardTitle className=\"text-lg text-blue-900\">\r\n              {viewMode === \"tree\" ? \"Organizational Structure\" : \"Hierarchy Table\"}\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent className=\"p-6\">\r\n            {viewMode === \"tree\" ? (\r\n              <HierarchyTree hierarchyStructure={hierarchyStructure} />\r\n            ) : (\r\n              <HierarchyTable hierarchyData={hierarchyData} employees={employees} />\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HierarchyBuilder;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,OAAO,EAAEC,SAAS,QAAQ,OAAO;AAC3D,SAASC,KAAK,EAAEC,IAAI,EAAEC,MAAM,EAAEC,SAAS,EAAEC,OAAO,EAAEC,KAAK,IAAIC,SAAS,EAAEC,IAAI,EAAEC,MAAM,EAAEC,SAAS,QAAQ,cAAc;AACnH,SAASC,IAAI,EAAEC,WAAW,EAAEC,UAAU,EAAEC,SAAS,QAAQ,WAAW;AACpE,SAASC,MAAM,QAAQ,aAAa;AACpC,SAASC,KAAK,QAAQ,YAAY;AAClC,SAASC,WAAW,EAAEC,YAAY,QAAQ,iBAAiB;AAC3D,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,gBAAgB,MAAM,wBAAwB;AACrD,SAASC,KAAK,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAAC+B,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACiC,eAAe,EAAEC,kBAAkB,CAAC,GAAGlC,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACmC,QAAQ,EAAEC,WAAW,CAAC,GAAGpC,QAAQ,CAAC,MAAM,CAAC;EAChD,MAAM,CAACqC,SAAS,EAAEC,YAAY,CAAC,GAAGtC,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACuC,OAAO,EAAEC,UAAU,CAAC,GAAGxC,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACyC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG1C,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAAC2C,QAAQ,EAAEC,WAAW,CAAC,GAAG5C,QAAQ,CAAC,KAAK,CAAC;;EAE/C;EACAE,SAAS,CAAC,MAAM;IACd,MAAM2C,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACFL,UAAU,CAAC,IAAI,CAAC;QAChB,MAAM,CAACM,YAAY,EAAEC,oBAAoB,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAC7D9B,WAAW,CAAC+B,MAAM,CAAC,CAAC,EACpB9B,YAAY,CAAC8B,MAAM,CAAC,CAAC,CACtB,CAAC;QAEFZ,YAAY,CAACQ,YAAY,CAAC;QAC1BhB,gBAAgB,CAACiB,oBAAoB,CAAC;MACxC,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;QAC3C3B,KAAK,CAAC2B,KAAK,CAAC,2CAA2C,CAAC;MAC1D,CAAC,SAAS;QACRX,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDK,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMQ,kBAAkB,GAAGpD,OAAO,CAAC,MAAM;IACvC,OAAOoC,SAAS,CAACiB,GAAG,CAACC,GAAG,KAAK;MAC3BC,KAAK,EAAED,GAAG,CAACE,EAAE;MACbC,KAAK,EAAE,GAAGH,GAAG,CAACI,IAAI,KAAKJ,GAAG,CAACE,EAAE,OAAOF,GAAG,CAACK,UAAU,EAAE;MACpDC,WAAW,EAAE,GAAGN,GAAG,CAACI,IAAI,IAAIJ,GAAG,CAACE,EAAE,IAAIF,GAAG,CAACK,UAAU,EAAE,CAACE,WAAW,CAAC;IACrE,CAAC,CAAC,CAAC;EACL,CAAC,EAAE,CAACzB,SAAS,CAAC,CAAC;;EAEf;EACA,MAAM0B,iBAAiB,GAAGV,kBAAkB;;EAE5C;EACA,MAAMW,kBAAkB,GAAG/D,OAAO,CAAC,MAAM;IACvC,MAAMgE,MAAM,GAAG,IAAIC,GAAG,CAAC7B,SAAS,CAACiB,GAAG,CAACC,GAAG,IAAI,CAACA,GAAG,CAACE,EAAE,EAAEF,GAAG,CAAC,CAAC,CAAC;IAC3D,MAAMY,WAAW,GAAG,IAAID,GAAG,CAAC,CAAC;;IAE7B;IACA7B,SAAS,CAAC+B,OAAO,CAACb,GAAG,IAAI;MACvBY,WAAW,CAACE,GAAG,CAACd,GAAG,CAACE,EAAE,EAAE,EAAE,CAAC;IAC7B,CAAC,CAAC;;IAEF;IACA5B,aAAa,CAACuC,OAAO,CAACE,GAAG,IAAI;MAC3B,MAAMC,SAAS,GAAGD,GAAG,CAACE,SAAS;MAC/B,IAAIL,WAAW,CAACM,GAAG,CAACF,SAAS,CAAC,EAAE;QAC9B,MAAMG,QAAQ,GAAGT,MAAM,CAACU,GAAG,CAACL,GAAG,CAACM,UAAU,CAAC;QAC3C,IAAIF,QAAQ,EAAE;UACZP,WAAW,CAACQ,GAAG,CAACJ,SAAS,CAAC,CAACM,IAAI,CAACH,QAAQ,CAAC;QAC3C;MACF;IACF,CAAC,CAAC;;IAEF;IACA,MAAMI,oBAAoB,GAAG,IAAIC,GAAG,CAAC,CAAC;IACtC,MAAMC,mBAAmB,GAAG,IAAID,GAAG,CAAC,CAAC;IAErClD,aAAa,CAACuC,OAAO,CAACE,GAAG,IAAI;MAC3BQ,oBAAoB,CAACG,GAAG,CAACX,GAAG,CAACM,UAAU,CAAC;MACxCI,mBAAmB,CAACC,GAAG,CAACX,GAAG,CAACE,SAAS,CAAC;IACxC,CAAC,CAAC;;IAEF;IACA;IACA;IACA,MAAMU,YAAY,GAAG,CAAC,GAAGF,mBAAmB,CAAC,CAC1CG,MAAM,CAACZ,SAAS,IAAI,CAACO,oBAAoB,CAACL,GAAG,CAACF,SAAS,CAAC,CAAC,CACzDjB,GAAG,CAACiB,SAAS,IAAIN,MAAM,CAACU,GAAG,CAACJ,SAAS,CAAC,CAAC,CACvCY,MAAM,CAACC,OAAO,CAAC;IAElB,OAAO;MAAEnB,MAAM;MAAEE,WAAW;MAAEkB,QAAQ,EAAEH;IAAa,CAAC;EACxD,CAAC,EAAE,CAACrD,aAAa,EAAEQ,SAAS,CAAC,CAAC;EAE9B,MAAMiD,qBAAqB,GAAG,MAAAA,CAAA,KAAY;IACxC,IAAI,CAACvD,gBAAgB,IAAI,CAACE,eAAe,EAAE;MACzCT,KAAK,CAAC2B,KAAK,CAAC,yCAAyC,CAAC;MACtD;IACF;IAEA,IAAIpB,gBAAgB,KAAKE,eAAe,EAAE;MACxCT,KAAK,CAAC2B,KAAK,CAAC,sCAAsC,CAAC;MACnD;IACF;;IAEA;IACA,MAAMoC,gBAAgB,GAAG1D,aAAa,CAAC2D,IAAI,CAAClB,GAAG,IAAIA,GAAG,CAACM,UAAU,KAAK7C,gBAAgB,CAAC;IACvF,IAAIwD,gBAAgB,EAAE;MACpB/D,KAAK,CAAC2B,KAAK,CAAC,+CAA+C,CAAC;MAC5D;IACF;IAEA,IAAI;MACF;MACA,MAAMsC,WAAW,GAAG,MAAMrE,YAAY,CAACsE,MAAM,CAAC;QAC5Cd,UAAU,EAAE7C,gBAAgB;QAC5ByC,SAAS,EAAEvC;MACb,CAAC,CAAC;;MAEF;MACAH,gBAAgB,CAAC6D,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEF,WAAW,CAAC,CAAC;MAChDzD,mBAAmB,CAAC,EAAE,CAAC;MACvBE,kBAAkB,CAAC,EAAE,CAAC;MACtBV,KAAK,CAACoE,OAAO,CAAC,4CAA4C,CAAC;IAC7D,CAAC,CAAC,OAAOzC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD3B,KAAK,CAAC2B,KAAK,CAAC,sCAAsC,CAAC;IACrD;EACF,CAAC;EAED,MAAM0C,wBAAwB,GAAG,MAAOjB,UAAU,IAAK;IACrD,IAAI;MACF,MAAMxD,YAAY,CAAC0E,MAAM,CAAClB,UAAU,CAAC;MACrC9C,gBAAgB,CAAC6D,IAAI,IAAIA,IAAI,CAACR,MAAM,CAACb,GAAG,IAAIA,GAAG,CAACM,UAAU,KAAKA,UAAU,CAAC,CAAC;MAC3EpD,KAAK,CAACoE,OAAO,CAAC,8CAA8C,CAAC;IAC/D,CAAC,CAAC,OAAOzC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpD3B,KAAK,CAAC2B,KAAK,CAAC,yCAAyC,CAAC;IACxD;EACF,CAAC;EAED,MAAM4C,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAM3E,YAAY,CAAC4E,QAAQ,CAAC,CAAC;MAC7BlE,gBAAgB,CAAC,EAAE,CAAC;MACpBN,KAAK,CAACoE,OAAO,CAAC,mDAAmD,CAAC;IACpE,CAAC,CAAC,OAAOzC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrD3B,KAAK,CAAC2B,KAAK,CAAC,yCAAyC,CAAC;IACxD;EACF,CAAC;EAED,MAAM8C,eAAe,GAAIrB,UAAU,IAAK;IACtC,MAAMF,QAAQ,GAAGrC,SAAS,CAACmD,IAAI,CAACjC,GAAG,IAAIA,GAAG,CAACE,EAAE,KAAKmB,UAAU,CAAC;IAC7D,OAAOF,QAAQ,GAAGA,QAAQ,CAACf,IAAI,GAAGiB,UAAU;EAC9C,CAAC;EAED,IAAIrC,OAAO,EAAE;IACX,oBACEb,OAAA;MAAKwE,SAAS,EAAC,wCAAwC;MAAAC,QAAA,eACrDzE,OAAA;QAAKwE,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1BzE,OAAA;UAAKwE,SAAS,EAAC;QAAwE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC9F7E,OAAA;UAAGwE,SAAS,EAAC,oBAAoB;UAAAC,QAAA,EAAC;QAAsC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;EAEA,oBACE7E,OAAA;IAAKwE,SAAS,EAAC,WAAW;IAAAC,QAAA,gBAExBzE,OAAA,CAACb,IAAI;MAACqF,SAAS,EAAC,oCAAoC;MAAAC,QAAA,eAClDzE,OAAA,CAACX,UAAU;QAACmF,SAAS,EAAC,iBAAiB;QAAAC,QAAA,eACrCzE,OAAA;UAAKwE,SAAS,EAAC,mCAAmC;UAAAC,QAAA,gBAChDzE,OAAA,CAACV,SAAS;YAACkF,SAAS,EAAC,2CAA2C;YAAAC,QAAA,gBAC9DzE,OAAA,CAACf,MAAM;cAACuF,SAAS,EAAC;YAAS;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC9B7E,OAAA;cAAAyE,QAAA,EAAM;YAAiB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrB,CAAC,eAEZ7E,OAAA;YAAKwE,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC7BzE,OAAA,CAACT,MAAM;cACLuF,OAAO,EAAErE,QAAQ,KAAK,MAAM,GAAG,SAAS,GAAG,SAAU;cACrDsE,IAAI,EAAC,IAAI;cACTC,OAAO,EAAEA,CAAA,KAAMtE,WAAW,CAAC,MAAM,CAAE;cACnC8D,SAAS,EAAE,+BACT/D,QAAQ,KAAK,MAAM,GACf,+BAA+B,GAC/B,gDAAgD,EACnD;cAAAgE,QAAA,gBAEHzE,OAAA,CAACnB,OAAO;gBAAC2F,SAAS,EAAC;cAAS;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eAC/B7E,OAAA;gBAAAyE,QAAA,EAAM;cAAQ;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACf,CAAC,eACT7E,OAAA,CAACT,MAAM;cACLuF,OAAO,EAAErE,QAAQ,KAAK,OAAO,GAAG,SAAS,GAAG,SAAU;cACtDsE,IAAI,EAAC,IAAI;cACTC,OAAO,EAAEA,CAAA,KAAMtE,WAAW,CAAC,OAAO,CAAE;cACpC8D,SAAS,EAAE,+BACT/D,QAAQ,KAAK,OAAO,GAChB,+BAA+B,GAC/B,gDAAgD,EACnD;cAAAgE,QAAA,gBAEHzE,OAAA,CAACjB,SAAS;gBAACyF,SAAS,EAAC;cAAS;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACjC7E,OAAA;gBAAAyE,QAAA,EAAM;cAAU;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjB,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eAGP7E,OAAA,CAACb,IAAI;MAACqF,SAAS,EAAC,oCAAoC;MAAAC,QAAA,gBAClDzE,OAAA,CAACX,UAAU;QAACmF,SAAS,EAAC,YAAY;QAAAC,QAAA,eAChCzE,OAAA,CAACV,SAAS;UAACkF,SAAS,EAAC,uBAAuB;UAAAC,QAAA,EAAC;QAA0B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzE,CAAC,eACb7E,OAAA,CAACZ,WAAW;QAACoF,SAAS,EAAC,eAAe;QAAAC,QAAA,eACpCzE,OAAA;UAAKwE,SAAS,EAAC,uCAAuC;UAAAC,QAAA,gBAEpDzE,OAAA;YAAKwE,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACxBzE,OAAA;cAAOwE,SAAS,EAAC,mCAAmC;cAAAC,QAAA,EAAC;YAAe;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC5E7E,OAAA,CAACH,gBAAgB;cACfiC,KAAK,EAAEzB,gBAAiB;cACxB4E,aAAa,EAAE3E,mBAAoB;cACnC4E,OAAO,EAAEvD,kBAAmB;cAC5BwD,WAAW,EAAC,oBAAoB;cAChCC,iBAAiB,EAAC,qBAAqB;cACvCZ,SAAS,EAAC;YAAuC;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eAGN7E,OAAA;YAAKwE,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACxBzE,OAAA;cAAOwE,SAAS,EAAC,mCAAmC;cAAAC,QAAA,EAAC;YAAU;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACvE7E,OAAA,CAACH,gBAAgB;cACfiC,KAAK,EAAEvB,eAAgB;cACvB0E,aAAa,EAAEzE,kBAAmB;cAClC0E,OAAO,EAAE7C,iBAAkB;cAC3B8C,WAAW,EAAC,mBAAmB;cAC/BC,iBAAiB,EAAC,oBAAoB;cACtCZ,SAAS,EAAC;YAAuC;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eAGN7E,OAAA;YAAKwE,SAAS,EAAC,0BAA0B;YAAAC,QAAA,gBACvCzE,OAAA,CAACT,MAAM;cACLyF,OAAO,EAAEpB,qBAAsB;cAC/BY,SAAS,EAAC,sCAAsC;cAAAC,QAAA,gBAEhDzE,OAAA,CAACtB,IAAI;gBAAC8F,SAAS,EAAC;cAAc;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,OAEnC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACT7E,OAAA,CAACT,MAAM;cACLuF,OAAO,EAAC,SAAS;cACjBE,OAAO,EAAEX,cAAe;cACxBG,SAAS,EAAC,4EAA4E;cAAAC,QAAA,gBAEtFzE,OAAA,CAACpB,SAAS;gBAAC4F,SAAS,EAAC;cAAS;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACjC7E,OAAA;gBAAAyE,QAAA,EAAM;cAAS;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChB,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eAGP7E,OAAA,CAACb,IAAI;MAACqF,SAAS,EAAC,oCAAoC;MAAAC,QAAA,gBAClDzE,OAAA,CAACX,UAAU;QAACmF,SAAS,EAAC,YAAY;QAAAC,QAAA,eAChCzE,OAAA,CAACV,SAAS;UAACkF,SAAS,EAAC,uBAAuB;UAAAC,QAAA,GAAC,yBAAuB,EAACtE,aAAa,CAACkF,MAAM,EAAC,GAAC;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7F,CAAC,eACb7E,OAAA,CAACZ,WAAW;QAACoF,SAAS,EAAC,KAAK;QAAAC,QAAA,EACzBtE,aAAa,CAACkF,MAAM,KAAK,CAAC,gBACzBrF,OAAA;UAAKwE,SAAS,EAAC,gCAAgC;UAAAC,QAAA,gBAC7CzE,OAAA,CAACvB,KAAK;YAAC+F,SAAS,EAAC;UAAmC;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACvD7E,OAAA;YAAAyE,QAAA,EAAG;UAAuC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAC9C7E,OAAA;YAAGwE,SAAS,EAAC,SAAS;YAAAC,QAAA,EAAC;UAA8D;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtF,CAAC,gBAEN7E,OAAA;UAAKwE,SAAS,EAAC,uCAAuC;UAAAC,QAAA,EACnDtE,aAAa,CAACyB,GAAG,CAACgB,GAAG,iBACpB5C,OAAA;YAA0BwE,SAAS,EAAC,oFAAoF;YAAAC,QAAA,gBACtHzE,OAAA;cAAKwE,SAAS,EAAC,WAAW;cAAAC,QAAA,gBACxBzE,OAAA;gBAAGwE,SAAS,EAAC,mCAAmC;gBAAAC,QAAA,EAAEF,eAAe,CAAC3B,GAAG,CAACM,UAAU;cAAC;gBAAAwB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACtF7E,OAAA;gBAAGwE,SAAS,EAAC,uBAAuB;gBAAAC,QAAA,GAAC,aAAW,EAACF,eAAe,CAAC3B,GAAG,CAACE,SAAS,CAAC;cAAA;gBAAA4B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjF,CAAC,eACN7E,OAAA,CAACT,MAAM;cACLuF,OAAO,EAAC,OAAO;cACfC,IAAI,EAAC,IAAI;cACTC,OAAO,EAAEA,CAAA,KAAMb,wBAAwB,CAACvB,GAAG,CAACM,UAAU,CAAE;cACxDsB,SAAS,EAAC,iDAAiD;cAAAC,QAAA,eAE3DzE,OAAA,CAACrB,MAAM;gBAAC6F,SAAS,EAAC;cAAS;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxB,CAAC;UAAA,GAZDjC,GAAG,CAACM,UAAU;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAanB,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MACN;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACU,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,EAGN1E,aAAa,CAACkF,MAAM,GAAG,CAAC,iBACvBrF,OAAA,CAACb,IAAI;MAACqF,SAAS,EAAC,oCAAoC;MAAAC,QAAA,gBAClDzE,OAAA,CAACX,UAAU;QAACmF,SAAS,EAAC,YAAY;QAAAC,QAAA,eAChCzE,OAAA,CAACV,SAAS;UAACkF,SAAS,EAAC,uBAAuB;UAAAC,QAAA,EACzChE,QAAQ,KAAK,MAAM,GAAG,0BAA0B,GAAG;QAAiB;UAAAiE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5D;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACb7E,OAAA,CAACZ,WAAW;QAACoF,SAAS,EAAC,KAAK;QAAAC,QAAA,EACzBhE,QAAQ,KAAK,MAAM,gBAClBT,OAAA,CAACL,aAAa;UAAC2C,kBAAkB,EAAEA;QAAmB;UAAAoC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAEzD7E,OAAA,CAACJ,cAAc;UAACO,aAAa,EAAEA,aAAc;UAACQ,SAAS,EAAEA;QAAU;UAAA+D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MACtE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACU,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CACP;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC3E,EAAA,CAxTID,gBAAgB;AAAAqF,EAAA,GAAhBrF,gBAAgB;AA0TtB,eAAeA,gBAAgB;AAAC,IAAAqF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}